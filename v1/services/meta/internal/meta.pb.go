// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.27.1
// 	protoc        v3.21.12
// source: internal/meta.proto

package meta

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type Command_Type int32

const (
	Command_CreateNodeCommand                Command_Type = 1
	Command_DeleteNodeCommand                Command_Type = 2
	Command_CreateDatabaseCommand            Command_Type = 3
	Command_DropDatabaseCommand              Command_Type = 4
	Command_CreateRetentionPolicyCommand     Command_Type = 5
	Command_DropRetentionPolicyCommand       Command_Type = 6
	Command_SetDefaultRetentionPolicyCommand Command_Type = 7
	Command_UpdateRetentionPolicyCommand     Command_Type = 8
	Command_CreateShardGroupCommand          Command_Type = 9
	Command_DeleteShardGroupCommand          Command_Type = 10
	Command_CreateContinuousQueryCommand     Command_Type = 11
	Command_DropContinuousQueryCommand       Command_Type = 12
	Command_CreateUserCommand                Command_Type = 13
	Command_DropUserCommand                  Command_Type = 14
	Command_UpdateUserCommand                Command_Type = 15
	Command_SetPrivilegeCommand              Command_Type = 16
	Command_SetDataCommand                   Command_Type = 17
	Command_SetAdminPrivilegeCommand         Command_Type = 18
	Command_UpdateNodeCommand                Command_Type = 19
	Command_CreateSubscriptionCommand        Command_Type = 21
	Command_DropSubscriptionCommand          Command_Type = 22
	Command_RemovePeerCommand                Command_Type = 23
	Command_CreateMetaNodeCommand            Command_Type = 24
	Command_CreateDataNodeCommand            Command_Type = 25
	Command_UpdateDataNodeCommand            Command_Type = 26
	Command_DeleteMetaNodeCommand            Command_Type = 27
	Command_DeleteDataNodeCommand            Command_Type = 28
	Command_SetMetaNodeCommand               Command_Type = 29
	Command_DropShardCommand                 Command_Type = 30
)

// Enum value maps for Command_Type.
var (
	Command_Type_name = map[int32]string{
		1:  "CreateNodeCommand",
		2:  "DeleteNodeCommand",
		3:  "CreateDatabaseCommand",
		4:  "DropDatabaseCommand",
		5:  "CreateRetentionPolicyCommand",
		6:  "DropRetentionPolicyCommand",
		7:  "SetDefaultRetentionPolicyCommand",
		8:  "UpdateRetentionPolicyCommand",
		9:  "CreateShardGroupCommand",
		10: "DeleteShardGroupCommand",
		11: "CreateContinuousQueryCommand",
		12: "DropContinuousQueryCommand",
		13: "CreateUserCommand",
		14: "DropUserCommand",
		15: "UpdateUserCommand",
		16: "SetPrivilegeCommand",
		17: "SetDataCommand",
		18: "SetAdminPrivilegeCommand",
		19: "UpdateNodeCommand",
		21: "CreateSubscriptionCommand",
		22: "DropSubscriptionCommand",
		23: "RemovePeerCommand",
		24: "CreateMetaNodeCommand",
		25: "CreateDataNodeCommand",
		26: "UpdateDataNodeCommand",
		27: "DeleteMetaNodeCommand",
		28: "DeleteDataNodeCommand",
		29: "SetMetaNodeCommand",
		30: "DropShardCommand",
	}
	Command_Type_value = map[string]int32{
		"CreateNodeCommand":                1,
		"DeleteNodeCommand":                2,
		"CreateDatabaseCommand":            3,
		"DropDatabaseCommand":              4,
		"CreateRetentionPolicyCommand":     5,
		"DropRetentionPolicyCommand":       6,
		"SetDefaultRetentionPolicyCommand": 7,
		"UpdateRetentionPolicyCommand":     8,
		"CreateShardGroupCommand":          9,
		"DeleteShardGroupCommand":          10,
		"CreateContinuousQueryCommand":     11,
		"DropContinuousQueryCommand":       12,
		"CreateUserCommand":                13,
		"DropUserCommand":                  14,
		"UpdateUserCommand":                15,
		"SetPrivilegeCommand":              16,
		"SetDataCommand":                   17,
		"SetAdminPrivilegeCommand":         18,
		"UpdateNodeCommand":                19,
		"CreateSubscriptionCommand":        21,
		"DropSubscriptionCommand":          22,
		"RemovePeerCommand":                23,
		"CreateMetaNodeCommand":            24,
		"CreateDataNodeCommand":            25,
		"UpdateDataNodeCommand":            26,
		"DeleteMetaNodeCommand":            27,
		"DeleteDataNodeCommand":            28,
		"SetMetaNodeCommand":               29,
		"DropShardCommand":                 30,
	}
)

func (x Command_Type) Enum() *Command_Type {
	p := new(Command_Type)
	*p = x
	return p
}

func (x Command_Type) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (Command_Type) Descriptor() protoreflect.EnumDescriptor {
	return file_internal_meta_proto_enumTypes[0].Descriptor()
}

func (Command_Type) Type() protoreflect.EnumType {
	return &file_internal_meta_proto_enumTypes[0]
}

func (x Command_Type) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Do not use.
func (x *Command_Type) UnmarshalJSON(b []byte) error {
	num, err := protoimpl.X.UnmarshalJSONEnum(x.Descriptor(), b)
	if err != nil {
		return err
	}
	*x = Command_Type(num)
	return nil
}

// Deprecated: Use Command_Type.Descriptor instead.
func (Command_Type) EnumDescriptor() ([]byte, []int) {
	return file_internal_meta_proto_rawDescGZIP(), []int{12, 0}
}

type Data struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Term            *uint64         `protobuf:"varint,1,req,name=Term" json:"Term,omitempty"`
	Index           *uint64         `protobuf:"varint,2,req,name=Index" json:"Index,omitempty"`
	ClusterID       *uint64         `protobuf:"varint,3,req,name=ClusterID" json:"ClusterID,omitempty"`
	Nodes           []*NodeInfo     `protobuf:"bytes,4,rep,name=Nodes" json:"Nodes,omitempty"`
	Databases       []*DatabaseInfo `protobuf:"bytes,5,rep,name=Databases" json:"Databases,omitempty"`
	Users           []*UserInfo     `protobuf:"bytes,6,rep,name=Users" json:"Users,omitempty"`
	MaxNodeID       *uint64         `protobuf:"varint,7,req,name=MaxNodeID" json:"MaxNodeID,omitempty"`
	MaxShardGroupID *uint64         `protobuf:"varint,8,req,name=MaxShardGroupID" json:"MaxShardGroupID,omitempty"`
	MaxShardID      *uint64         `protobuf:"varint,9,req,name=MaxShardID" json:"MaxShardID,omitempty"`
	// added for 0.10.0
	DataNodes []*NodeInfo `protobuf:"bytes,10,rep,name=DataNodes" json:"DataNodes,omitempty"`
	MetaNodes []*NodeInfo `protobuf:"bytes,11,rep,name=MetaNodes" json:"MetaNodes,omitempty"`
}

func (x *Data) Reset() {
	*x = Data{}
	if protoimpl.UnsafeEnabled {
		mi := &file_internal_meta_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Data) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Data) ProtoMessage() {}

func (x *Data) ProtoReflect() protoreflect.Message {
	mi := &file_internal_meta_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Data.ProtoReflect.Descriptor instead.
func (*Data) Descriptor() ([]byte, []int) {
	return file_internal_meta_proto_rawDescGZIP(), []int{0}
}

func (x *Data) GetTerm() uint64 {
	if x != nil && x.Term != nil {
		return *x.Term
	}
	return 0
}

func (x *Data) GetIndex() uint64 {
	if x != nil && x.Index != nil {
		return *x.Index
	}
	return 0
}

func (x *Data) GetClusterID() uint64 {
	if x != nil && x.ClusterID != nil {
		return *x.ClusterID
	}
	return 0
}

func (x *Data) GetNodes() []*NodeInfo {
	if x != nil {
		return x.Nodes
	}
	return nil
}

func (x *Data) GetDatabases() []*DatabaseInfo {
	if x != nil {
		return x.Databases
	}
	return nil
}

func (x *Data) GetUsers() []*UserInfo {
	if x != nil {
		return x.Users
	}
	return nil
}

func (x *Data) GetMaxNodeID() uint64 {
	if x != nil && x.MaxNodeID != nil {
		return *x.MaxNodeID
	}
	return 0
}

func (x *Data) GetMaxShardGroupID() uint64 {
	if x != nil && x.MaxShardGroupID != nil {
		return *x.MaxShardGroupID
	}
	return 0
}

func (x *Data) GetMaxShardID() uint64 {
	if x != nil && x.MaxShardID != nil {
		return *x.MaxShardID
	}
	return 0
}

func (x *Data) GetDataNodes() []*NodeInfo {
	if x != nil {
		return x.DataNodes
	}
	return nil
}

func (x *Data) GetMetaNodes() []*NodeInfo {
	if x != nil {
		return x.MetaNodes
	}
	return nil
}

type NodeInfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ID      *uint64 `protobuf:"varint,1,req,name=ID" json:"ID,omitempty"`
	Host    *string `protobuf:"bytes,2,req,name=Host" json:"Host,omitempty"`
	TCPHost *string `protobuf:"bytes,3,opt,name=TCPHost" json:"TCPHost,omitempty"`
}

func (x *NodeInfo) Reset() {
	*x = NodeInfo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_internal_meta_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *NodeInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*NodeInfo) ProtoMessage() {}

func (x *NodeInfo) ProtoReflect() protoreflect.Message {
	mi := &file_internal_meta_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use NodeInfo.ProtoReflect.Descriptor instead.
func (*NodeInfo) Descriptor() ([]byte, []int) {
	return file_internal_meta_proto_rawDescGZIP(), []int{1}
}

func (x *NodeInfo) GetID() uint64 {
	if x != nil && x.ID != nil {
		return *x.ID
	}
	return 0
}

func (x *NodeInfo) GetHost() string {
	if x != nil && x.Host != nil {
		return *x.Host
	}
	return ""
}

func (x *NodeInfo) GetTCPHost() string {
	if x != nil && x.TCPHost != nil {
		return *x.TCPHost
	}
	return ""
}

type DatabaseInfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Name                   *string                `protobuf:"bytes,1,req,name=Name" json:"Name,omitempty"`
	DefaultRetentionPolicy *string                `protobuf:"bytes,2,req,name=DefaultRetentionPolicy" json:"DefaultRetentionPolicy,omitempty"`
	RetentionPolicies      []*RetentionPolicyInfo `protobuf:"bytes,3,rep,name=RetentionPolicies" json:"RetentionPolicies,omitempty"`
	ContinuousQueries      []*ContinuousQueryInfo `protobuf:"bytes,4,rep,name=ContinuousQueries" json:"ContinuousQueries,omitempty"`
}

func (x *DatabaseInfo) Reset() {
	*x = DatabaseInfo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_internal_meta_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DatabaseInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DatabaseInfo) ProtoMessage() {}

func (x *DatabaseInfo) ProtoReflect() protoreflect.Message {
	mi := &file_internal_meta_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DatabaseInfo.ProtoReflect.Descriptor instead.
func (*DatabaseInfo) Descriptor() ([]byte, []int) {
	return file_internal_meta_proto_rawDescGZIP(), []int{2}
}

func (x *DatabaseInfo) GetName() string {
	if x != nil && x.Name != nil {
		return *x.Name
	}
	return ""
}

func (x *DatabaseInfo) GetDefaultRetentionPolicy() string {
	if x != nil && x.DefaultRetentionPolicy != nil {
		return *x.DefaultRetentionPolicy
	}
	return ""
}

func (x *DatabaseInfo) GetRetentionPolicies() []*RetentionPolicyInfo {
	if x != nil {
		return x.RetentionPolicies
	}
	return nil
}

func (x *DatabaseInfo) GetContinuousQueries() []*ContinuousQueryInfo {
	if x != nil {
		return x.ContinuousQueries
	}
	return nil
}

type RetentionPolicySpec struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Name               *string `protobuf:"bytes,1,opt,name=Name" json:"Name,omitempty"`
	Duration           *int64  `protobuf:"varint,2,opt,name=Duration" json:"Duration,omitempty"`
	ShardGroupDuration *int64  `protobuf:"varint,3,opt,name=ShardGroupDuration" json:"ShardGroupDuration,omitempty"`
	ReplicaN           *uint32 `protobuf:"varint,4,opt,name=ReplicaN" json:"ReplicaN,omitempty"`
}

func (x *RetentionPolicySpec) Reset() {
	*x = RetentionPolicySpec{}
	if protoimpl.UnsafeEnabled {
		mi := &file_internal_meta_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RetentionPolicySpec) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RetentionPolicySpec) ProtoMessage() {}

func (x *RetentionPolicySpec) ProtoReflect() protoreflect.Message {
	mi := &file_internal_meta_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RetentionPolicySpec.ProtoReflect.Descriptor instead.
func (*RetentionPolicySpec) Descriptor() ([]byte, []int) {
	return file_internal_meta_proto_rawDescGZIP(), []int{3}
}

func (x *RetentionPolicySpec) GetName() string {
	if x != nil && x.Name != nil {
		return *x.Name
	}
	return ""
}

func (x *RetentionPolicySpec) GetDuration() int64 {
	if x != nil && x.Duration != nil {
		return *x.Duration
	}
	return 0
}

func (x *RetentionPolicySpec) GetShardGroupDuration() int64 {
	if x != nil && x.ShardGroupDuration != nil {
		return *x.ShardGroupDuration
	}
	return 0
}

func (x *RetentionPolicySpec) GetReplicaN() uint32 {
	if x != nil && x.ReplicaN != nil {
		return *x.ReplicaN
	}
	return 0
}

type RetentionPolicyInfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Name               *string             `protobuf:"bytes,1,req,name=Name" json:"Name,omitempty"`
	Duration           *int64              `protobuf:"varint,2,req,name=Duration" json:"Duration,omitempty"`
	ShardGroupDuration *int64              `protobuf:"varint,3,req,name=ShardGroupDuration" json:"ShardGroupDuration,omitempty"`
	ReplicaN           *uint32             `protobuf:"varint,4,req,name=ReplicaN" json:"ReplicaN,omitempty"`
	ShardGroups        []*ShardGroupInfo   `protobuf:"bytes,5,rep,name=ShardGroups" json:"ShardGroups,omitempty"`
	Subscriptions      []*SubscriptionInfo `protobuf:"bytes,6,rep,name=Subscriptions" json:"Subscriptions,omitempty"`
}

func (x *RetentionPolicyInfo) Reset() {
	*x = RetentionPolicyInfo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_internal_meta_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RetentionPolicyInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RetentionPolicyInfo) ProtoMessage() {}

func (x *RetentionPolicyInfo) ProtoReflect() protoreflect.Message {
	mi := &file_internal_meta_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RetentionPolicyInfo.ProtoReflect.Descriptor instead.
func (*RetentionPolicyInfo) Descriptor() ([]byte, []int) {
	return file_internal_meta_proto_rawDescGZIP(), []int{4}
}

func (x *RetentionPolicyInfo) GetName() string {
	if x != nil && x.Name != nil {
		return *x.Name
	}
	return ""
}

func (x *RetentionPolicyInfo) GetDuration() int64 {
	if x != nil && x.Duration != nil {
		return *x.Duration
	}
	return 0
}

func (x *RetentionPolicyInfo) GetShardGroupDuration() int64 {
	if x != nil && x.ShardGroupDuration != nil {
		return *x.ShardGroupDuration
	}
	return 0
}

func (x *RetentionPolicyInfo) GetReplicaN() uint32 {
	if x != nil && x.ReplicaN != nil {
		return *x.ReplicaN
	}
	return 0
}

func (x *RetentionPolicyInfo) GetShardGroups() []*ShardGroupInfo {
	if x != nil {
		return x.ShardGroups
	}
	return nil
}

func (x *RetentionPolicyInfo) GetSubscriptions() []*SubscriptionInfo {
	if x != nil {
		return x.Subscriptions
	}
	return nil
}

type ShardGroupInfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ID          *uint64      `protobuf:"varint,1,req,name=ID" json:"ID,omitempty"`
	StartTime   *int64       `protobuf:"varint,2,req,name=StartTime" json:"StartTime,omitempty"`
	EndTime     *int64       `protobuf:"varint,3,req,name=EndTime" json:"EndTime,omitempty"`
	DeletedAt   *int64       `protobuf:"varint,4,req,name=DeletedAt" json:"DeletedAt,omitempty"`
	Shards      []*ShardInfo `protobuf:"bytes,5,rep,name=Shards" json:"Shards,omitempty"`
	TruncatedAt *int64       `protobuf:"varint,6,opt,name=TruncatedAt" json:"TruncatedAt,omitempty"`
}

func (x *ShardGroupInfo) Reset() {
	*x = ShardGroupInfo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_internal_meta_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ShardGroupInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ShardGroupInfo) ProtoMessage() {}

func (x *ShardGroupInfo) ProtoReflect() protoreflect.Message {
	mi := &file_internal_meta_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ShardGroupInfo.ProtoReflect.Descriptor instead.
func (*ShardGroupInfo) Descriptor() ([]byte, []int) {
	return file_internal_meta_proto_rawDescGZIP(), []int{5}
}

func (x *ShardGroupInfo) GetID() uint64 {
	if x != nil && x.ID != nil {
		return *x.ID
	}
	return 0
}

func (x *ShardGroupInfo) GetStartTime() int64 {
	if x != nil && x.StartTime != nil {
		return *x.StartTime
	}
	return 0
}

func (x *ShardGroupInfo) GetEndTime() int64 {
	if x != nil && x.EndTime != nil {
		return *x.EndTime
	}
	return 0
}

func (x *ShardGroupInfo) GetDeletedAt() int64 {
	if x != nil && x.DeletedAt != nil {
		return *x.DeletedAt
	}
	return 0
}

func (x *ShardGroupInfo) GetShards() []*ShardInfo {
	if x != nil {
		return x.Shards
	}
	return nil
}

func (x *ShardGroupInfo) GetTruncatedAt() int64 {
	if x != nil && x.TruncatedAt != nil {
		return *x.TruncatedAt
	}
	return 0
}

type ShardInfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ID *uint64 `protobuf:"varint,1,req,name=ID" json:"ID,omitempty"`
	// Deprecated: Do not use.
	OwnerIDs []uint64      `protobuf:"varint,2,rep,name=OwnerIDs" json:"OwnerIDs,omitempty"`
	Owners   []*ShardOwner `protobuf:"bytes,3,rep,name=Owners" json:"Owners,omitempty"`
}

func (x *ShardInfo) Reset() {
	*x = ShardInfo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_internal_meta_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ShardInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ShardInfo) ProtoMessage() {}

func (x *ShardInfo) ProtoReflect() protoreflect.Message {
	mi := &file_internal_meta_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ShardInfo.ProtoReflect.Descriptor instead.
func (*ShardInfo) Descriptor() ([]byte, []int) {
	return file_internal_meta_proto_rawDescGZIP(), []int{6}
}

func (x *ShardInfo) GetID() uint64 {
	if x != nil && x.ID != nil {
		return *x.ID
	}
	return 0
}

// Deprecated: Do not use.
func (x *ShardInfo) GetOwnerIDs() []uint64 {
	if x != nil {
		return x.OwnerIDs
	}
	return nil
}

func (x *ShardInfo) GetOwners() []*ShardOwner {
	if x != nil {
		return x.Owners
	}
	return nil
}

type SubscriptionInfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Name         *string  `protobuf:"bytes,1,req,name=Name" json:"Name,omitempty"`
	Mode         *string  `protobuf:"bytes,2,req,name=Mode" json:"Mode,omitempty"`
	Destinations []string `protobuf:"bytes,3,rep,name=Destinations" json:"Destinations,omitempty"`
}

func (x *SubscriptionInfo) Reset() {
	*x = SubscriptionInfo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_internal_meta_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SubscriptionInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SubscriptionInfo) ProtoMessage() {}

func (x *SubscriptionInfo) ProtoReflect() protoreflect.Message {
	mi := &file_internal_meta_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SubscriptionInfo.ProtoReflect.Descriptor instead.
func (*SubscriptionInfo) Descriptor() ([]byte, []int) {
	return file_internal_meta_proto_rawDescGZIP(), []int{7}
}

func (x *SubscriptionInfo) GetName() string {
	if x != nil && x.Name != nil {
		return *x.Name
	}
	return ""
}

func (x *SubscriptionInfo) GetMode() string {
	if x != nil && x.Mode != nil {
		return *x.Mode
	}
	return ""
}

func (x *SubscriptionInfo) GetDestinations() []string {
	if x != nil {
		return x.Destinations
	}
	return nil
}

type ShardOwner struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	NodeID *uint64 `protobuf:"varint,1,req,name=NodeID" json:"NodeID,omitempty"`
}

func (x *ShardOwner) Reset() {
	*x = ShardOwner{}
	if protoimpl.UnsafeEnabled {
		mi := &file_internal_meta_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ShardOwner) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ShardOwner) ProtoMessage() {}

func (x *ShardOwner) ProtoReflect() protoreflect.Message {
	mi := &file_internal_meta_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ShardOwner.ProtoReflect.Descriptor instead.
func (*ShardOwner) Descriptor() ([]byte, []int) {
	return file_internal_meta_proto_rawDescGZIP(), []int{8}
}

func (x *ShardOwner) GetNodeID() uint64 {
	if x != nil && x.NodeID != nil {
		return *x.NodeID
	}
	return 0
}

type ContinuousQueryInfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Name  *string `protobuf:"bytes,1,req,name=Name" json:"Name,omitempty"`
	Query *string `protobuf:"bytes,2,req,name=Query" json:"Query,omitempty"`
}

func (x *ContinuousQueryInfo) Reset() {
	*x = ContinuousQueryInfo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_internal_meta_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ContinuousQueryInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ContinuousQueryInfo) ProtoMessage() {}

func (x *ContinuousQueryInfo) ProtoReflect() protoreflect.Message {
	mi := &file_internal_meta_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ContinuousQueryInfo.ProtoReflect.Descriptor instead.
func (*ContinuousQueryInfo) Descriptor() ([]byte, []int) {
	return file_internal_meta_proto_rawDescGZIP(), []int{9}
}

func (x *ContinuousQueryInfo) GetName() string {
	if x != nil && x.Name != nil {
		return *x.Name
	}
	return ""
}

func (x *ContinuousQueryInfo) GetQuery() string {
	if x != nil && x.Query != nil {
		return *x.Query
	}
	return ""
}

type UserInfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Name       *string          `protobuf:"bytes,1,req,name=Name" json:"Name,omitempty"`
	Hash       *string          `protobuf:"bytes,2,req,name=Hash" json:"Hash,omitempty"`
	Admin      *bool            `protobuf:"varint,3,req,name=Admin" json:"Admin,omitempty"`
	Privileges []*UserPrivilege `protobuf:"bytes,4,rep,name=Privileges" json:"Privileges,omitempty"`
}

func (x *UserInfo) Reset() {
	*x = UserInfo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_internal_meta_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UserInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UserInfo) ProtoMessage() {}

func (x *UserInfo) ProtoReflect() protoreflect.Message {
	mi := &file_internal_meta_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UserInfo.ProtoReflect.Descriptor instead.
func (*UserInfo) Descriptor() ([]byte, []int) {
	return file_internal_meta_proto_rawDescGZIP(), []int{10}
}

func (x *UserInfo) GetName() string {
	if x != nil && x.Name != nil {
		return *x.Name
	}
	return ""
}

func (x *UserInfo) GetHash() string {
	if x != nil && x.Hash != nil {
		return *x.Hash
	}
	return ""
}

func (x *UserInfo) GetAdmin() bool {
	if x != nil && x.Admin != nil {
		return *x.Admin
	}
	return false
}

func (x *UserInfo) GetPrivileges() []*UserPrivilege {
	if x != nil {
		return x.Privileges
	}
	return nil
}

type UserPrivilege struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Database  *string `protobuf:"bytes,1,req,name=Database" json:"Database,omitempty"`
	Privilege *int32  `protobuf:"varint,2,req,name=Privilege" json:"Privilege,omitempty"`
}

func (x *UserPrivilege) Reset() {
	*x = UserPrivilege{}
	if protoimpl.UnsafeEnabled {
		mi := &file_internal_meta_proto_msgTypes[11]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UserPrivilege) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UserPrivilege) ProtoMessage() {}

func (x *UserPrivilege) ProtoReflect() protoreflect.Message {
	mi := &file_internal_meta_proto_msgTypes[11]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UserPrivilege.ProtoReflect.Descriptor instead.
func (*UserPrivilege) Descriptor() ([]byte, []int) {
	return file_internal_meta_proto_rawDescGZIP(), []int{11}
}

func (x *UserPrivilege) GetDatabase() string {
	if x != nil && x.Database != nil {
		return *x.Database
	}
	return ""
}

func (x *UserPrivilege) GetPrivilege() int32 {
	if x != nil && x.Privilege != nil {
		return *x.Privilege
	}
	return 0
}

type Command struct {
	state           protoimpl.MessageState
	sizeCache       protoimpl.SizeCache
	unknownFields   protoimpl.UnknownFields
	extensionFields protoimpl.ExtensionFields

	Type *Command_Type `protobuf:"varint,1,req,name=type,enum=meta.Command_Type" json:"type,omitempty"`
}

func (x *Command) Reset() {
	*x = Command{}
	if protoimpl.UnsafeEnabled {
		mi := &file_internal_meta_proto_msgTypes[12]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Command) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Command) ProtoMessage() {}

func (x *Command) ProtoReflect() protoreflect.Message {
	mi := &file_internal_meta_proto_msgTypes[12]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Command.ProtoReflect.Descriptor instead.
func (*Command) Descriptor() ([]byte, []int) {
	return file_internal_meta_proto_rawDescGZIP(), []int{12}
}

func (x *Command) GetType() Command_Type {
	if x != nil && x.Type != nil {
		return *x.Type
	}
	return Command_CreateNodeCommand
}

// This isn't used in >= 0.10.0. Kept around for upgrade purposes. Instead
// look at CreateDataNodeCommand and CreateMetaNodeCommand
type CreateNodeCommand struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Host *string `protobuf:"bytes,1,req,name=Host" json:"Host,omitempty"`
	Rand *uint64 `protobuf:"varint,2,req,name=Rand" json:"Rand,omitempty"`
}

func (x *CreateNodeCommand) Reset() {
	*x = CreateNodeCommand{}
	if protoimpl.UnsafeEnabled {
		mi := &file_internal_meta_proto_msgTypes[13]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateNodeCommand) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateNodeCommand) ProtoMessage() {}

func (x *CreateNodeCommand) ProtoReflect() protoreflect.Message {
	mi := &file_internal_meta_proto_msgTypes[13]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateNodeCommand.ProtoReflect.Descriptor instead.
func (*CreateNodeCommand) Descriptor() ([]byte, []int) {
	return file_internal_meta_proto_rawDescGZIP(), []int{13}
}

func (x *CreateNodeCommand) GetHost() string {
	if x != nil && x.Host != nil {
		return *x.Host
	}
	return ""
}

func (x *CreateNodeCommand) GetRand() uint64 {
	if x != nil && x.Rand != nil {
		return *x.Rand
	}
	return 0
}

type DeleteNodeCommand struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ID    *uint64 `protobuf:"varint,1,req,name=ID" json:"ID,omitempty"`
	Force *bool   `protobuf:"varint,2,req,name=Force" json:"Force,omitempty"`
}

func (x *DeleteNodeCommand) Reset() {
	*x = DeleteNodeCommand{}
	if protoimpl.UnsafeEnabled {
		mi := &file_internal_meta_proto_msgTypes[14]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeleteNodeCommand) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteNodeCommand) ProtoMessage() {}

func (x *DeleteNodeCommand) ProtoReflect() protoreflect.Message {
	mi := &file_internal_meta_proto_msgTypes[14]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteNodeCommand.ProtoReflect.Descriptor instead.
func (*DeleteNodeCommand) Descriptor() ([]byte, []int) {
	return file_internal_meta_proto_rawDescGZIP(), []int{14}
}

func (x *DeleteNodeCommand) GetID() uint64 {
	if x != nil && x.ID != nil {
		return *x.ID
	}
	return 0
}

func (x *DeleteNodeCommand) GetForce() bool {
	if x != nil && x.Force != nil {
		return *x.Force
	}
	return false
}

type CreateDatabaseCommand struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Name            *string              `protobuf:"bytes,1,req,name=Name" json:"Name,omitempty"`
	RetentionPolicy *RetentionPolicyInfo `protobuf:"bytes,2,opt,name=RetentionPolicy" json:"RetentionPolicy,omitempty"`
}

func (x *CreateDatabaseCommand) Reset() {
	*x = CreateDatabaseCommand{}
	if protoimpl.UnsafeEnabled {
		mi := &file_internal_meta_proto_msgTypes[15]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateDatabaseCommand) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateDatabaseCommand) ProtoMessage() {}

func (x *CreateDatabaseCommand) ProtoReflect() protoreflect.Message {
	mi := &file_internal_meta_proto_msgTypes[15]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateDatabaseCommand.ProtoReflect.Descriptor instead.
func (*CreateDatabaseCommand) Descriptor() ([]byte, []int) {
	return file_internal_meta_proto_rawDescGZIP(), []int{15}
}

func (x *CreateDatabaseCommand) GetName() string {
	if x != nil && x.Name != nil {
		return *x.Name
	}
	return ""
}

func (x *CreateDatabaseCommand) GetRetentionPolicy() *RetentionPolicyInfo {
	if x != nil {
		return x.RetentionPolicy
	}
	return nil
}

type DropDatabaseCommand struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Name *string `protobuf:"bytes,1,req,name=Name" json:"Name,omitempty"`
}

func (x *DropDatabaseCommand) Reset() {
	*x = DropDatabaseCommand{}
	if protoimpl.UnsafeEnabled {
		mi := &file_internal_meta_proto_msgTypes[16]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DropDatabaseCommand) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DropDatabaseCommand) ProtoMessage() {}

func (x *DropDatabaseCommand) ProtoReflect() protoreflect.Message {
	mi := &file_internal_meta_proto_msgTypes[16]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DropDatabaseCommand.ProtoReflect.Descriptor instead.
func (*DropDatabaseCommand) Descriptor() ([]byte, []int) {
	return file_internal_meta_proto_rawDescGZIP(), []int{16}
}

func (x *DropDatabaseCommand) GetName() string {
	if x != nil && x.Name != nil {
		return *x.Name
	}
	return ""
}

type CreateRetentionPolicyCommand struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Database        *string              `protobuf:"bytes,1,req,name=Database" json:"Database,omitempty"`
	RetentionPolicy *RetentionPolicyInfo `protobuf:"bytes,2,req,name=RetentionPolicy" json:"RetentionPolicy,omitempty"`
}

func (x *CreateRetentionPolicyCommand) Reset() {
	*x = CreateRetentionPolicyCommand{}
	if protoimpl.UnsafeEnabled {
		mi := &file_internal_meta_proto_msgTypes[17]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateRetentionPolicyCommand) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateRetentionPolicyCommand) ProtoMessage() {}

func (x *CreateRetentionPolicyCommand) ProtoReflect() protoreflect.Message {
	mi := &file_internal_meta_proto_msgTypes[17]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateRetentionPolicyCommand.ProtoReflect.Descriptor instead.
func (*CreateRetentionPolicyCommand) Descriptor() ([]byte, []int) {
	return file_internal_meta_proto_rawDescGZIP(), []int{17}
}

func (x *CreateRetentionPolicyCommand) GetDatabase() string {
	if x != nil && x.Database != nil {
		return *x.Database
	}
	return ""
}

func (x *CreateRetentionPolicyCommand) GetRetentionPolicy() *RetentionPolicyInfo {
	if x != nil {
		return x.RetentionPolicy
	}
	return nil
}

type DropRetentionPolicyCommand struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Database *string `protobuf:"bytes,1,req,name=Database" json:"Database,omitempty"`
	Name     *string `protobuf:"bytes,2,req,name=Name" json:"Name,omitempty"`
}

func (x *DropRetentionPolicyCommand) Reset() {
	*x = DropRetentionPolicyCommand{}
	if protoimpl.UnsafeEnabled {
		mi := &file_internal_meta_proto_msgTypes[18]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DropRetentionPolicyCommand) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DropRetentionPolicyCommand) ProtoMessage() {}

func (x *DropRetentionPolicyCommand) ProtoReflect() protoreflect.Message {
	mi := &file_internal_meta_proto_msgTypes[18]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DropRetentionPolicyCommand.ProtoReflect.Descriptor instead.
func (*DropRetentionPolicyCommand) Descriptor() ([]byte, []int) {
	return file_internal_meta_proto_rawDescGZIP(), []int{18}
}

func (x *DropRetentionPolicyCommand) GetDatabase() string {
	if x != nil && x.Database != nil {
		return *x.Database
	}
	return ""
}

func (x *DropRetentionPolicyCommand) GetName() string {
	if x != nil && x.Name != nil {
		return *x.Name
	}
	return ""
}

type SetDefaultRetentionPolicyCommand struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Database *string `protobuf:"bytes,1,req,name=Database" json:"Database,omitempty"`
	Name     *string `protobuf:"bytes,2,req,name=Name" json:"Name,omitempty"`
}

func (x *SetDefaultRetentionPolicyCommand) Reset() {
	*x = SetDefaultRetentionPolicyCommand{}
	if protoimpl.UnsafeEnabled {
		mi := &file_internal_meta_proto_msgTypes[19]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SetDefaultRetentionPolicyCommand) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SetDefaultRetentionPolicyCommand) ProtoMessage() {}

func (x *SetDefaultRetentionPolicyCommand) ProtoReflect() protoreflect.Message {
	mi := &file_internal_meta_proto_msgTypes[19]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SetDefaultRetentionPolicyCommand.ProtoReflect.Descriptor instead.
func (*SetDefaultRetentionPolicyCommand) Descriptor() ([]byte, []int) {
	return file_internal_meta_proto_rawDescGZIP(), []int{19}
}

func (x *SetDefaultRetentionPolicyCommand) GetDatabase() string {
	if x != nil && x.Database != nil {
		return *x.Database
	}
	return ""
}

func (x *SetDefaultRetentionPolicyCommand) GetName() string {
	if x != nil && x.Name != nil {
		return *x.Name
	}
	return ""
}

type UpdateRetentionPolicyCommand struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Database *string `protobuf:"bytes,1,req,name=Database" json:"Database,omitempty"`
	Name     *string `protobuf:"bytes,2,req,name=Name" json:"Name,omitempty"`
	NewName  *string `protobuf:"bytes,3,opt,name=NewName" json:"NewName,omitempty"`
	Duration *int64  `protobuf:"varint,4,opt,name=Duration" json:"Duration,omitempty"`
	ReplicaN *uint32 `protobuf:"varint,5,opt,name=ReplicaN" json:"ReplicaN,omitempty"`
}

func (x *UpdateRetentionPolicyCommand) Reset() {
	*x = UpdateRetentionPolicyCommand{}
	if protoimpl.UnsafeEnabled {
		mi := &file_internal_meta_proto_msgTypes[20]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateRetentionPolicyCommand) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateRetentionPolicyCommand) ProtoMessage() {}

func (x *UpdateRetentionPolicyCommand) ProtoReflect() protoreflect.Message {
	mi := &file_internal_meta_proto_msgTypes[20]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateRetentionPolicyCommand.ProtoReflect.Descriptor instead.
func (*UpdateRetentionPolicyCommand) Descriptor() ([]byte, []int) {
	return file_internal_meta_proto_rawDescGZIP(), []int{20}
}

func (x *UpdateRetentionPolicyCommand) GetDatabase() string {
	if x != nil && x.Database != nil {
		return *x.Database
	}
	return ""
}

func (x *UpdateRetentionPolicyCommand) GetName() string {
	if x != nil && x.Name != nil {
		return *x.Name
	}
	return ""
}

func (x *UpdateRetentionPolicyCommand) GetNewName() string {
	if x != nil && x.NewName != nil {
		return *x.NewName
	}
	return ""
}

func (x *UpdateRetentionPolicyCommand) GetDuration() int64 {
	if x != nil && x.Duration != nil {
		return *x.Duration
	}
	return 0
}

func (x *UpdateRetentionPolicyCommand) GetReplicaN() uint32 {
	if x != nil && x.ReplicaN != nil {
		return *x.ReplicaN
	}
	return 0
}

type CreateShardGroupCommand struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Database  *string `protobuf:"bytes,1,req,name=Database" json:"Database,omitempty"`
	Policy    *string `protobuf:"bytes,2,req,name=Policy" json:"Policy,omitempty"`
	Timestamp *int64  `protobuf:"varint,3,req,name=Timestamp" json:"Timestamp,omitempty"`
}

func (x *CreateShardGroupCommand) Reset() {
	*x = CreateShardGroupCommand{}
	if protoimpl.UnsafeEnabled {
		mi := &file_internal_meta_proto_msgTypes[21]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateShardGroupCommand) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateShardGroupCommand) ProtoMessage() {}

func (x *CreateShardGroupCommand) ProtoReflect() protoreflect.Message {
	mi := &file_internal_meta_proto_msgTypes[21]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateShardGroupCommand.ProtoReflect.Descriptor instead.
func (*CreateShardGroupCommand) Descriptor() ([]byte, []int) {
	return file_internal_meta_proto_rawDescGZIP(), []int{21}
}

func (x *CreateShardGroupCommand) GetDatabase() string {
	if x != nil && x.Database != nil {
		return *x.Database
	}
	return ""
}

func (x *CreateShardGroupCommand) GetPolicy() string {
	if x != nil && x.Policy != nil {
		return *x.Policy
	}
	return ""
}

func (x *CreateShardGroupCommand) GetTimestamp() int64 {
	if x != nil && x.Timestamp != nil {
		return *x.Timestamp
	}
	return 0
}

type DeleteShardGroupCommand struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Database     *string `protobuf:"bytes,1,req,name=Database" json:"Database,omitempty"`
	Policy       *string `protobuf:"bytes,2,req,name=Policy" json:"Policy,omitempty"`
	ShardGroupID *uint64 `protobuf:"varint,3,req,name=ShardGroupID" json:"ShardGroupID,omitempty"`
}

func (x *DeleteShardGroupCommand) Reset() {
	*x = DeleteShardGroupCommand{}
	if protoimpl.UnsafeEnabled {
		mi := &file_internal_meta_proto_msgTypes[22]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeleteShardGroupCommand) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteShardGroupCommand) ProtoMessage() {}

func (x *DeleteShardGroupCommand) ProtoReflect() protoreflect.Message {
	mi := &file_internal_meta_proto_msgTypes[22]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteShardGroupCommand.ProtoReflect.Descriptor instead.
func (*DeleteShardGroupCommand) Descriptor() ([]byte, []int) {
	return file_internal_meta_proto_rawDescGZIP(), []int{22}
}

func (x *DeleteShardGroupCommand) GetDatabase() string {
	if x != nil && x.Database != nil {
		return *x.Database
	}
	return ""
}

func (x *DeleteShardGroupCommand) GetPolicy() string {
	if x != nil && x.Policy != nil {
		return *x.Policy
	}
	return ""
}

func (x *DeleteShardGroupCommand) GetShardGroupID() uint64 {
	if x != nil && x.ShardGroupID != nil {
		return *x.ShardGroupID
	}
	return 0
}

type CreateContinuousQueryCommand struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Database *string `protobuf:"bytes,1,req,name=Database" json:"Database,omitempty"`
	Name     *string `protobuf:"bytes,2,req,name=Name" json:"Name,omitempty"`
	Query    *string `protobuf:"bytes,3,req,name=Query" json:"Query,omitempty"`
}

func (x *CreateContinuousQueryCommand) Reset() {
	*x = CreateContinuousQueryCommand{}
	if protoimpl.UnsafeEnabled {
		mi := &file_internal_meta_proto_msgTypes[23]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateContinuousQueryCommand) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateContinuousQueryCommand) ProtoMessage() {}

func (x *CreateContinuousQueryCommand) ProtoReflect() protoreflect.Message {
	mi := &file_internal_meta_proto_msgTypes[23]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateContinuousQueryCommand.ProtoReflect.Descriptor instead.
func (*CreateContinuousQueryCommand) Descriptor() ([]byte, []int) {
	return file_internal_meta_proto_rawDescGZIP(), []int{23}
}

func (x *CreateContinuousQueryCommand) GetDatabase() string {
	if x != nil && x.Database != nil {
		return *x.Database
	}
	return ""
}

func (x *CreateContinuousQueryCommand) GetName() string {
	if x != nil && x.Name != nil {
		return *x.Name
	}
	return ""
}

func (x *CreateContinuousQueryCommand) GetQuery() string {
	if x != nil && x.Query != nil {
		return *x.Query
	}
	return ""
}

type DropContinuousQueryCommand struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Database *string `protobuf:"bytes,1,req,name=Database" json:"Database,omitempty"`
	Name     *string `protobuf:"bytes,2,req,name=Name" json:"Name,omitempty"`
}

func (x *DropContinuousQueryCommand) Reset() {
	*x = DropContinuousQueryCommand{}
	if protoimpl.UnsafeEnabled {
		mi := &file_internal_meta_proto_msgTypes[24]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DropContinuousQueryCommand) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DropContinuousQueryCommand) ProtoMessage() {}

func (x *DropContinuousQueryCommand) ProtoReflect() protoreflect.Message {
	mi := &file_internal_meta_proto_msgTypes[24]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DropContinuousQueryCommand.ProtoReflect.Descriptor instead.
func (*DropContinuousQueryCommand) Descriptor() ([]byte, []int) {
	return file_internal_meta_proto_rawDescGZIP(), []int{24}
}

func (x *DropContinuousQueryCommand) GetDatabase() string {
	if x != nil && x.Database != nil {
		return *x.Database
	}
	return ""
}

func (x *DropContinuousQueryCommand) GetName() string {
	if x != nil && x.Name != nil {
		return *x.Name
	}
	return ""
}

type CreateUserCommand struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Name  *string `protobuf:"bytes,1,req,name=Name" json:"Name,omitempty"`
	Hash  *string `protobuf:"bytes,2,req,name=Hash" json:"Hash,omitempty"`
	Admin *bool   `protobuf:"varint,3,req,name=Admin" json:"Admin,omitempty"`
}

func (x *CreateUserCommand) Reset() {
	*x = CreateUserCommand{}
	if protoimpl.UnsafeEnabled {
		mi := &file_internal_meta_proto_msgTypes[25]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateUserCommand) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateUserCommand) ProtoMessage() {}

func (x *CreateUserCommand) ProtoReflect() protoreflect.Message {
	mi := &file_internal_meta_proto_msgTypes[25]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateUserCommand.ProtoReflect.Descriptor instead.
func (*CreateUserCommand) Descriptor() ([]byte, []int) {
	return file_internal_meta_proto_rawDescGZIP(), []int{25}
}

func (x *CreateUserCommand) GetName() string {
	if x != nil && x.Name != nil {
		return *x.Name
	}
	return ""
}

func (x *CreateUserCommand) GetHash() string {
	if x != nil && x.Hash != nil {
		return *x.Hash
	}
	return ""
}

func (x *CreateUserCommand) GetAdmin() bool {
	if x != nil && x.Admin != nil {
		return *x.Admin
	}
	return false
}

type DropUserCommand struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Name *string `protobuf:"bytes,1,req,name=Name" json:"Name,omitempty"`
}

func (x *DropUserCommand) Reset() {
	*x = DropUserCommand{}
	if protoimpl.UnsafeEnabled {
		mi := &file_internal_meta_proto_msgTypes[26]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DropUserCommand) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DropUserCommand) ProtoMessage() {}

func (x *DropUserCommand) ProtoReflect() protoreflect.Message {
	mi := &file_internal_meta_proto_msgTypes[26]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DropUserCommand.ProtoReflect.Descriptor instead.
func (*DropUserCommand) Descriptor() ([]byte, []int) {
	return file_internal_meta_proto_rawDescGZIP(), []int{26}
}

func (x *DropUserCommand) GetName() string {
	if x != nil && x.Name != nil {
		return *x.Name
	}
	return ""
}

type UpdateUserCommand struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Name *string `protobuf:"bytes,1,req,name=Name" json:"Name,omitempty"`
	Hash *string `protobuf:"bytes,2,req,name=Hash" json:"Hash,omitempty"`
}

func (x *UpdateUserCommand) Reset() {
	*x = UpdateUserCommand{}
	if protoimpl.UnsafeEnabled {
		mi := &file_internal_meta_proto_msgTypes[27]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateUserCommand) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateUserCommand) ProtoMessage() {}

func (x *UpdateUserCommand) ProtoReflect() protoreflect.Message {
	mi := &file_internal_meta_proto_msgTypes[27]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateUserCommand.ProtoReflect.Descriptor instead.
func (*UpdateUserCommand) Descriptor() ([]byte, []int) {
	return file_internal_meta_proto_rawDescGZIP(), []int{27}
}

func (x *UpdateUserCommand) GetName() string {
	if x != nil && x.Name != nil {
		return *x.Name
	}
	return ""
}

func (x *UpdateUserCommand) GetHash() string {
	if x != nil && x.Hash != nil {
		return *x.Hash
	}
	return ""
}

type SetPrivilegeCommand struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Username  *string `protobuf:"bytes,1,req,name=Username" json:"Username,omitempty"`
	Database  *string `protobuf:"bytes,2,req,name=Database" json:"Database,omitempty"`
	Privilege *int32  `protobuf:"varint,3,req,name=Privilege" json:"Privilege,omitempty"`
}

func (x *SetPrivilegeCommand) Reset() {
	*x = SetPrivilegeCommand{}
	if protoimpl.UnsafeEnabled {
		mi := &file_internal_meta_proto_msgTypes[28]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SetPrivilegeCommand) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SetPrivilegeCommand) ProtoMessage() {}

func (x *SetPrivilegeCommand) ProtoReflect() protoreflect.Message {
	mi := &file_internal_meta_proto_msgTypes[28]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SetPrivilegeCommand.ProtoReflect.Descriptor instead.
func (*SetPrivilegeCommand) Descriptor() ([]byte, []int) {
	return file_internal_meta_proto_rawDescGZIP(), []int{28}
}

func (x *SetPrivilegeCommand) GetUsername() string {
	if x != nil && x.Username != nil {
		return *x.Username
	}
	return ""
}

func (x *SetPrivilegeCommand) GetDatabase() string {
	if x != nil && x.Database != nil {
		return *x.Database
	}
	return ""
}

func (x *SetPrivilegeCommand) GetPrivilege() int32 {
	if x != nil && x.Privilege != nil {
		return *x.Privilege
	}
	return 0
}

type SetDataCommand struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Data *Data `protobuf:"bytes,1,req,name=Data" json:"Data,omitempty"`
}

func (x *SetDataCommand) Reset() {
	*x = SetDataCommand{}
	if protoimpl.UnsafeEnabled {
		mi := &file_internal_meta_proto_msgTypes[29]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SetDataCommand) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SetDataCommand) ProtoMessage() {}

func (x *SetDataCommand) ProtoReflect() protoreflect.Message {
	mi := &file_internal_meta_proto_msgTypes[29]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SetDataCommand.ProtoReflect.Descriptor instead.
func (*SetDataCommand) Descriptor() ([]byte, []int) {
	return file_internal_meta_proto_rawDescGZIP(), []int{29}
}

func (x *SetDataCommand) GetData() *Data {
	if x != nil {
		return x.Data
	}
	return nil
}

type SetAdminPrivilegeCommand struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Username *string `protobuf:"bytes,1,req,name=Username" json:"Username,omitempty"`
	Admin    *bool   `protobuf:"varint,2,req,name=Admin" json:"Admin,omitempty"`
}

func (x *SetAdminPrivilegeCommand) Reset() {
	*x = SetAdminPrivilegeCommand{}
	if protoimpl.UnsafeEnabled {
		mi := &file_internal_meta_proto_msgTypes[30]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SetAdminPrivilegeCommand) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SetAdminPrivilegeCommand) ProtoMessage() {}

func (x *SetAdminPrivilegeCommand) ProtoReflect() protoreflect.Message {
	mi := &file_internal_meta_proto_msgTypes[30]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SetAdminPrivilegeCommand.ProtoReflect.Descriptor instead.
func (*SetAdminPrivilegeCommand) Descriptor() ([]byte, []int) {
	return file_internal_meta_proto_rawDescGZIP(), []int{30}
}

func (x *SetAdminPrivilegeCommand) GetUsername() string {
	if x != nil && x.Username != nil {
		return *x.Username
	}
	return ""
}

func (x *SetAdminPrivilegeCommand) GetAdmin() bool {
	if x != nil && x.Admin != nil {
		return *x.Admin
	}
	return false
}

type UpdateNodeCommand struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ID   *uint64 `protobuf:"varint,1,req,name=ID" json:"ID,omitempty"`
	Host *string `protobuf:"bytes,2,req,name=Host" json:"Host,omitempty"`
}

func (x *UpdateNodeCommand) Reset() {
	*x = UpdateNodeCommand{}
	if protoimpl.UnsafeEnabled {
		mi := &file_internal_meta_proto_msgTypes[31]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateNodeCommand) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateNodeCommand) ProtoMessage() {}

func (x *UpdateNodeCommand) ProtoReflect() protoreflect.Message {
	mi := &file_internal_meta_proto_msgTypes[31]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateNodeCommand.ProtoReflect.Descriptor instead.
func (*UpdateNodeCommand) Descriptor() ([]byte, []int) {
	return file_internal_meta_proto_rawDescGZIP(), []int{31}
}

func (x *UpdateNodeCommand) GetID() uint64 {
	if x != nil && x.ID != nil {
		return *x.ID
	}
	return 0
}

func (x *UpdateNodeCommand) GetHost() string {
	if x != nil && x.Host != nil {
		return *x.Host
	}
	return ""
}

type CreateSubscriptionCommand struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Name            *string  `protobuf:"bytes,1,req,name=Name" json:"Name,omitempty"`
	Database        *string  `protobuf:"bytes,2,req,name=Database" json:"Database,omitempty"`
	RetentionPolicy *string  `protobuf:"bytes,3,req,name=RetentionPolicy" json:"RetentionPolicy,omitempty"`
	Mode            *string  `protobuf:"bytes,4,req,name=Mode" json:"Mode,omitempty"`
	Destinations    []string `protobuf:"bytes,5,rep,name=Destinations" json:"Destinations,omitempty"`
}

func (x *CreateSubscriptionCommand) Reset() {
	*x = CreateSubscriptionCommand{}
	if protoimpl.UnsafeEnabled {
		mi := &file_internal_meta_proto_msgTypes[32]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateSubscriptionCommand) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateSubscriptionCommand) ProtoMessage() {}

func (x *CreateSubscriptionCommand) ProtoReflect() protoreflect.Message {
	mi := &file_internal_meta_proto_msgTypes[32]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateSubscriptionCommand.ProtoReflect.Descriptor instead.
func (*CreateSubscriptionCommand) Descriptor() ([]byte, []int) {
	return file_internal_meta_proto_rawDescGZIP(), []int{32}
}

func (x *CreateSubscriptionCommand) GetName() string {
	if x != nil && x.Name != nil {
		return *x.Name
	}
	return ""
}

func (x *CreateSubscriptionCommand) GetDatabase() string {
	if x != nil && x.Database != nil {
		return *x.Database
	}
	return ""
}

func (x *CreateSubscriptionCommand) GetRetentionPolicy() string {
	if x != nil && x.RetentionPolicy != nil {
		return *x.RetentionPolicy
	}
	return ""
}

func (x *CreateSubscriptionCommand) GetMode() string {
	if x != nil && x.Mode != nil {
		return *x.Mode
	}
	return ""
}

func (x *CreateSubscriptionCommand) GetDestinations() []string {
	if x != nil {
		return x.Destinations
	}
	return nil
}

type DropSubscriptionCommand struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Name            *string `protobuf:"bytes,1,req,name=Name" json:"Name,omitempty"`
	Database        *string `protobuf:"bytes,2,req,name=Database" json:"Database,omitempty"`
	RetentionPolicy *string `protobuf:"bytes,3,req,name=RetentionPolicy" json:"RetentionPolicy,omitempty"`
}

func (x *DropSubscriptionCommand) Reset() {
	*x = DropSubscriptionCommand{}
	if protoimpl.UnsafeEnabled {
		mi := &file_internal_meta_proto_msgTypes[33]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DropSubscriptionCommand) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DropSubscriptionCommand) ProtoMessage() {}

func (x *DropSubscriptionCommand) ProtoReflect() protoreflect.Message {
	mi := &file_internal_meta_proto_msgTypes[33]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DropSubscriptionCommand.ProtoReflect.Descriptor instead.
func (*DropSubscriptionCommand) Descriptor() ([]byte, []int) {
	return file_internal_meta_proto_rawDescGZIP(), []int{33}
}

func (x *DropSubscriptionCommand) GetName() string {
	if x != nil && x.Name != nil {
		return *x.Name
	}
	return ""
}

func (x *DropSubscriptionCommand) GetDatabase() string {
	if x != nil && x.Database != nil {
		return *x.Database
	}
	return ""
}

func (x *DropSubscriptionCommand) GetRetentionPolicy() string {
	if x != nil && x.RetentionPolicy != nil {
		return *x.RetentionPolicy
	}
	return ""
}

type RemovePeerCommand struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ID   *uint64 `protobuf:"varint,1,opt,name=ID" json:"ID,omitempty"`
	Addr *string `protobuf:"bytes,2,req,name=Addr" json:"Addr,omitempty"`
}

func (x *RemovePeerCommand) Reset() {
	*x = RemovePeerCommand{}
	if protoimpl.UnsafeEnabled {
		mi := &file_internal_meta_proto_msgTypes[34]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RemovePeerCommand) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RemovePeerCommand) ProtoMessage() {}

func (x *RemovePeerCommand) ProtoReflect() protoreflect.Message {
	mi := &file_internal_meta_proto_msgTypes[34]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RemovePeerCommand.ProtoReflect.Descriptor instead.
func (*RemovePeerCommand) Descriptor() ([]byte, []int) {
	return file_internal_meta_proto_rawDescGZIP(), []int{34}
}

func (x *RemovePeerCommand) GetID() uint64 {
	if x != nil && x.ID != nil {
		return *x.ID
	}
	return 0
}

func (x *RemovePeerCommand) GetAddr() string {
	if x != nil && x.Addr != nil {
		return *x.Addr
	}
	return ""
}

type CreateMetaNodeCommand struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	HTTPAddr *string `protobuf:"bytes,1,req,name=HTTPAddr" json:"HTTPAddr,omitempty"`
	TCPAddr  *string `protobuf:"bytes,2,req,name=TCPAddr" json:"TCPAddr,omitempty"`
	Rand     *uint64 `protobuf:"varint,3,req,name=Rand" json:"Rand,omitempty"`
}

func (x *CreateMetaNodeCommand) Reset() {
	*x = CreateMetaNodeCommand{}
	if protoimpl.UnsafeEnabled {
		mi := &file_internal_meta_proto_msgTypes[35]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateMetaNodeCommand) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateMetaNodeCommand) ProtoMessage() {}

func (x *CreateMetaNodeCommand) ProtoReflect() protoreflect.Message {
	mi := &file_internal_meta_proto_msgTypes[35]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateMetaNodeCommand.ProtoReflect.Descriptor instead.
func (*CreateMetaNodeCommand) Descriptor() ([]byte, []int) {
	return file_internal_meta_proto_rawDescGZIP(), []int{35}
}

func (x *CreateMetaNodeCommand) GetHTTPAddr() string {
	if x != nil && x.HTTPAddr != nil {
		return *x.HTTPAddr
	}
	return ""
}

func (x *CreateMetaNodeCommand) GetTCPAddr() string {
	if x != nil && x.TCPAddr != nil {
		return *x.TCPAddr
	}
	return ""
}

func (x *CreateMetaNodeCommand) GetRand() uint64 {
	if x != nil && x.Rand != nil {
		return *x.Rand
	}
	return 0
}

type CreateDataNodeCommand struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	HTTPAddr *string `protobuf:"bytes,1,req,name=HTTPAddr" json:"HTTPAddr,omitempty"`
	TCPAddr  *string `protobuf:"bytes,2,req,name=TCPAddr" json:"TCPAddr,omitempty"`
}

func (x *CreateDataNodeCommand) Reset() {
	*x = CreateDataNodeCommand{}
	if protoimpl.UnsafeEnabled {
		mi := &file_internal_meta_proto_msgTypes[36]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateDataNodeCommand) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateDataNodeCommand) ProtoMessage() {}

func (x *CreateDataNodeCommand) ProtoReflect() protoreflect.Message {
	mi := &file_internal_meta_proto_msgTypes[36]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateDataNodeCommand.ProtoReflect.Descriptor instead.
func (*CreateDataNodeCommand) Descriptor() ([]byte, []int) {
	return file_internal_meta_proto_rawDescGZIP(), []int{36}
}

func (x *CreateDataNodeCommand) GetHTTPAddr() string {
	if x != nil && x.HTTPAddr != nil {
		return *x.HTTPAddr
	}
	return ""
}

func (x *CreateDataNodeCommand) GetTCPAddr() string {
	if x != nil && x.TCPAddr != nil {
		return *x.TCPAddr
	}
	return ""
}

type UpdateDataNodeCommand struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ID      *uint64 `protobuf:"varint,1,req,name=ID" json:"ID,omitempty"`
	Host    *string `protobuf:"bytes,2,req,name=Host" json:"Host,omitempty"`
	TCPHost *string `protobuf:"bytes,3,req,name=TCPHost" json:"TCPHost,omitempty"`
}

func (x *UpdateDataNodeCommand) Reset() {
	*x = UpdateDataNodeCommand{}
	if protoimpl.UnsafeEnabled {
		mi := &file_internal_meta_proto_msgTypes[37]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateDataNodeCommand) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateDataNodeCommand) ProtoMessage() {}

func (x *UpdateDataNodeCommand) ProtoReflect() protoreflect.Message {
	mi := &file_internal_meta_proto_msgTypes[37]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateDataNodeCommand.ProtoReflect.Descriptor instead.
func (*UpdateDataNodeCommand) Descriptor() ([]byte, []int) {
	return file_internal_meta_proto_rawDescGZIP(), []int{37}
}

func (x *UpdateDataNodeCommand) GetID() uint64 {
	if x != nil && x.ID != nil {
		return *x.ID
	}
	return 0
}

func (x *UpdateDataNodeCommand) GetHost() string {
	if x != nil && x.Host != nil {
		return *x.Host
	}
	return ""
}

func (x *UpdateDataNodeCommand) GetTCPHost() string {
	if x != nil && x.TCPHost != nil {
		return *x.TCPHost
	}
	return ""
}

type DeleteMetaNodeCommand struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ID *uint64 `protobuf:"varint,1,req,name=ID" json:"ID,omitempty"`
}

func (x *DeleteMetaNodeCommand) Reset() {
	*x = DeleteMetaNodeCommand{}
	if protoimpl.UnsafeEnabled {
		mi := &file_internal_meta_proto_msgTypes[38]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeleteMetaNodeCommand) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteMetaNodeCommand) ProtoMessage() {}

func (x *DeleteMetaNodeCommand) ProtoReflect() protoreflect.Message {
	mi := &file_internal_meta_proto_msgTypes[38]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteMetaNodeCommand.ProtoReflect.Descriptor instead.
func (*DeleteMetaNodeCommand) Descriptor() ([]byte, []int) {
	return file_internal_meta_proto_rawDescGZIP(), []int{38}
}

func (x *DeleteMetaNodeCommand) GetID() uint64 {
	if x != nil && x.ID != nil {
		return *x.ID
	}
	return 0
}

type DeleteDataNodeCommand struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ID *uint64 `protobuf:"varint,1,req,name=ID" json:"ID,omitempty"`
}

func (x *DeleteDataNodeCommand) Reset() {
	*x = DeleteDataNodeCommand{}
	if protoimpl.UnsafeEnabled {
		mi := &file_internal_meta_proto_msgTypes[39]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeleteDataNodeCommand) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteDataNodeCommand) ProtoMessage() {}

func (x *DeleteDataNodeCommand) ProtoReflect() protoreflect.Message {
	mi := &file_internal_meta_proto_msgTypes[39]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteDataNodeCommand.ProtoReflect.Descriptor instead.
func (*DeleteDataNodeCommand) Descriptor() ([]byte, []int) {
	return file_internal_meta_proto_rawDescGZIP(), []int{39}
}

func (x *DeleteDataNodeCommand) GetID() uint64 {
	if x != nil && x.ID != nil {
		return *x.ID
	}
	return 0
}

type Response struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	OK    *bool   `protobuf:"varint,1,req,name=OK" json:"OK,omitempty"`
	Error *string `protobuf:"bytes,2,opt,name=Error" json:"Error,omitempty"`
	Index *uint64 `protobuf:"varint,3,opt,name=Index" json:"Index,omitempty"`
}

func (x *Response) Reset() {
	*x = Response{}
	if protoimpl.UnsafeEnabled {
		mi := &file_internal_meta_proto_msgTypes[40]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Response) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Response) ProtoMessage() {}

func (x *Response) ProtoReflect() protoreflect.Message {
	mi := &file_internal_meta_proto_msgTypes[40]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Response.ProtoReflect.Descriptor instead.
func (*Response) Descriptor() ([]byte, []int) {
	return file_internal_meta_proto_rawDescGZIP(), []int{40}
}

func (x *Response) GetOK() bool {
	if x != nil && x.OK != nil {
		return *x.OK
	}
	return false
}

func (x *Response) GetError() string {
	if x != nil && x.Error != nil {
		return *x.Error
	}
	return ""
}

func (x *Response) GetIndex() uint64 {
	if x != nil && x.Index != nil {
		return *x.Index
	}
	return 0
}

// SetMetaNodeCommand is for the initial metanode in a cluster or
// if the single host restarts and its hostname changes, this will update it
type SetMetaNodeCommand struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	HTTPAddr *string `protobuf:"bytes,1,req,name=HTTPAddr" json:"HTTPAddr,omitempty"`
	TCPAddr  *string `protobuf:"bytes,2,req,name=TCPAddr" json:"TCPAddr,omitempty"`
	Rand     *uint64 `protobuf:"varint,3,req,name=Rand" json:"Rand,omitempty"`
}

func (x *SetMetaNodeCommand) Reset() {
	*x = SetMetaNodeCommand{}
	if protoimpl.UnsafeEnabled {
		mi := &file_internal_meta_proto_msgTypes[41]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SetMetaNodeCommand) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SetMetaNodeCommand) ProtoMessage() {}

func (x *SetMetaNodeCommand) ProtoReflect() protoreflect.Message {
	mi := &file_internal_meta_proto_msgTypes[41]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SetMetaNodeCommand.ProtoReflect.Descriptor instead.
func (*SetMetaNodeCommand) Descriptor() ([]byte, []int) {
	return file_internal_meta_proto_rawDescGZIP(), []int{41}
}

func (x *SetMetaNodeCommand) GetHTTPAddr() string {
	if x != nil && x.HTTPAddr != nil {
		return *x.HTTPAddr
	}
	return ""
}

func (x *SetMetaNodeCommand) GetTCPAddr() string {
	if x != nil && x.TCPAddr != nil {
		return *x.TCPAddr
	}
	return ""
}

func (x *SetMetaNodeCommand) GetRand() uint64 {
	if x != nil && x.Rand != nil {
		return *x.Rand
	}
	return 0
}

type DropShardCommand struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ID *uint64 `protobuf:"varint,1,req,name=ID" json:"ID,omitempty"`
}

func (x *DropShardCommand) Reset() {
	*x = DropShardCommand{}
	if protoimpl.UnsafeEnabled {
		mi := &file_internal_meta_proto_msgTypes[42]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DropShardCommand) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DropShardCommand) ProtoMessage() {}

func (x *DropShardCommand) ProtoReflect() protoreflect.Message {
	mi := &file_internal_meta_proto_msgTypes[42]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DropShardCommand.ProtoReflect.Descriptor instead.
func (*DropShardCommand) Descriptor() ([]byte, []int) {
	return file_internal_meta_proto_rawDescGZIP(), []int{42}
}

func (x *DropShardCommand) GetID() uint64 {
	if x != nil && x.ID != nil {
		return *x.ID
	}
	return 0
}

var file_internal_meta_proto_extTypes = []protoimpl.ExtensionInfo{
	{
		ExtendedType:  (*Command)(nil),
		ExtensionType: (*CreateNodeCommand)(nil),
		Field:         101,
		Name:          "meta.CreateNodeCommand.command",
		Tag:           "bytes,101,opt,name=command",
		Filename:      "internal/meta.proto",
	},
	{
		ExtendedType:  (*Command)(nil),
		ExtensionType: (*DeleteNodeCommand)(nil),
		Field:         102,
		Name:          "meta.DeleteNodeCommand.command",
		Tag:           "bytes,102,opt,name=command",
		Filename:      "internal/meta.proto",
	},
	{
		ExtendedType:  (*Command)(nil),
		ExtensionType: (*CreateDatabaseCommand)(nil),
		Field:         103,
		Name:          "meta.CreateDatabaseCommand.command",
		Tag:           "bytes,103,opt,name=command",
		Filename:      "internal/meta.proto",
	},
	{
		ExtendedType:  (*Command)(nil),
		ExtensionType: (*DropDatabaseCommand)(nil),
		Field:         104,
		Name:          "meta.DropDatabaseCommand.command",
		Tag:           "bytes,104,opt,name=command",
		Filename:      "internal/meta.proto",
	},
	{
		ExtendedType:  (*Command)(nil),
		ExtensionType: (*CreateRetentionPolicyCommand)(nil),
		Field:         105,
		Name:          "meta.CreateRetentionPolicyCommand.command",
		Tag:           "bytes,105,opt,name=command",
		Filename:      "internal/meta.proto",
	},
	{
		ExtendedType:  (*Command)(nil),
		ExtensionType: (*DropRetentionPolicyCommand)(nil),
		Field:         106,
		Name:          "meta.DropRetentionPolicyCommand.command",
		Tag:           "bytes,106,opt,name=command",
		Filename:      "internal/meta.proto",
	},
	{
		ExtendedType:  (*Command)(nil),
		ExtensionType: (*SetDefaultRetentionPolicyCommand)(nil),
		Field:         107,
		Name:          "meta.SetDefaultRetentionPolicyCommand.command",
		Tag:           "bytes,107,opt,name=command",
		Filename:      "internal/meta.proto",
	},
	{
		ExtendedType:  (*Command)(nil),
		ExtensionType: (*UpdateRetentionPolicyCommand)(nil),
		Field:         108,
		Name:          "meta.UpdateRetentionPolicyCommand.command",
		Tag:           "bytes,108,opt,name=command",
		Filename:      "internal/meta.proto",
	},
	{
		ExtendedType:  (*Command)(nil),
		ExtensionType: (*CreateShardGroupCommand)(nil),
		Field:         109,
		Name:          "meta.CreateShardGroupCommand.command",
		Tag:           "bytes,109,opt,name=command",
		Filename:      "internal/meta.proto",
	},
	{
		ExtendedType:  (*Command)(nil),
		ExtensionType: (*DeleteShardGroupCommand)(nil),
		Field:         110,
		Name:          "meta.DeleteShardGroupCommand.command",
		Tag:           "bytes,110,opt,name=command",
		Filename:      "internal/meta.proto",
	},
	{
		ExtendedType:  (*Command)(nil),
		ExtensionType: (*CreateContinuousQueryCommand)(nil),
		Field:         111,
		Name:          "meta.CreateContinuousQueryCommand.command",
		Tag:           "bytes,111,opt,name=command",
		Filename:      "internal/meta.proto",
	},
	{
		ExtendedType:  (*Command)(nil),
		ExtensionType: (*DropContinuousQueryCommand)(nil),
		Field:         112,
		Name:          "meta.DropContinuousQueryCommand.command",
		Tag:           "bytes,112,opt,name=command",
		Filename:      "internal/meta.proto",
	},
	{
		ExtendedType:  (*Command)(nil),
		ExtensionType: (*CreateUserCommand)(nil),
		Field:         113,
		Name:          "meta.CreateUserCommand.command",
		Tag:           "bytes,113,opt,name=command",
		Filename:      "internal/meta.proto",
	},
	{
		ExtendedType:  (*Command)(nil),
		ExtensionType: (*DropUserCommand)(nil),
		Field:         114,
		Name:          "meta.DropUserCommand.command",
		Tag:           "bytes,114,opt,name=command",
		Filename:      "internal/meta.proto",
	},
	{
		ExtendedType:  (*Command)(nil),
		ExtensionType: (*UpdateUserCommand)(nil),
		Field:         115,
		Name:          "meta.UpdateUserCommand.command",
		Tag:           "bytes,115,opt,name=command",
		Filename:      "internal/meta.proto",
	},
	{
		ExtendedType:  (*Command)(nil),
		ExtensionType: (*SetPrivilegeCommand)(nil),
		Field:         116,
		Name:          "meta.SetPrivilegeCommand.command",
		Tag:           "bytes,116,opt,name=command",
		Filename:      "internal/meta.proto",
	},
	{
		ExtendedType:  (*Command)(nil),
		ExtensionType: (*SetDataCommand)(nil),
		Field:         117,
		Name:          "meta.SetDataCommand.command",
		Tag:           "bytes,117,opt,name=command",
		Filename:      "internal/meta.proto",
	},
	{
		ExtendedType:  (*Command)(nil),
		ExtensionType: (*SetAdminPrivilegeCommand)(nil),
		Field:         118,
		Name:          "meta.SetAdminPrivilegeCommand.command",
		Tag:           "bytes,118,opt,name=command",
		Filename:      "internal/meta.proto",
	},
	{
		ExtendedType:  (*Command)(nil),
		ExtensionType: (*UpdateNodeCommand)(nil),
		Field:         119,
		Name:          "meta.UpdateNodeCommand.command",
		Tag:           "bytes,119,opt,name=command",
		Filename:      "internal/meta.proto",
	},
	{
		ExtendedType:  (*Command)(nil),
		ExtensionType: (*CreateSubscriptionCommand)(nil),
		Field:         121,
		Name:          "meta.CreateSubscriptionCommand.command",
		Tag:           "bytes,121,opt,name=command",
		Filename:      "internal/meta.proto",
	},
	{
		ExtendedType:  (*Command)(nil),
		ExtensionType: (*DropSubscriptionCommand)(nil),
		Field:         122,
		Name:          "meta.DropSubscriptionCommand.command",
		Tag:           "bytes,122,opt,name=command",
		Filename:      "internal/meta.proto",
	},
	{
		ExtendedType:  (*Command)(nil),
		ExtensionType: (*RemovePeerCommand)(nil),
		Field:         123,
		Name:          "meta.RemovePeerCommand.command",
		Tag:           "bytes,123,opt,name=command",
		Filename:      "internal/meta.proto",
	},
	{
		ExtendedType:  (*Command)(nil),
		ExtensionType: (*CreateMetaNodeCommand)(nil),
		Field:         124,
		Name:          "meta.CreateMetaNodeCommand.command",
		Tag:           "bytes,124,opt,name=command",
		Filename:      "internal/meta.proto",
	},
	{
		ExtendedType:  (*Command)(nil),
		ExtensionType: (*CreateDataNodeCommand)(nil),
		Field:         125,
		Name:          "meta.CreateDataNodeCommand.command",
		Tag:           "bytes,125,opt,name=command",
		Filename:      "internal/meta.proto",
	},
	{
		ExtendedType:  (*Command)(nil),
		ExtensionType: (*UpdateDataNodeCommand)(nil),
		Field:         126,
		Name:          "meta.UpdateDataNodeCommand.command",
		Tag:           "bytes,126,opt,name=command",
		Filename:      "internal/meta.proto",
	},
	{
		ExtendedType:  (*Command)(nil),
		ExtensionType: (*DeleteMetaNodeCommand)(nil),
		Field:         127,
		Name:          "meta.DeleteMetaNodeCommand.command",
		Tag:           "bytes,127,opt,name=command",
		Filename:      "internal/meta.proto",
	},
	{
		ExtendedType:  (*Command)(nil),
		ExtensionType: (*DeleteDataNodeCommand)(nil),
		Field:         128,
		Name:          "meta.DeleteDataNodeCommand.command",
		Tag:           "bytes,128,opt,name=command",
		Filename:      "internal/meta.proto",
	},
	{
		ExtendedType:  (*Command)(nil),
		ExtensionType: (*SetMetaNodeCommand)(nil),
		Field:         129,
		Name:          "meta.SetMetaNodeCommand.command",
		Tag:           "bytes,129,opt,name=command",
		Filename:      "internal/meta.proto",
	},
	{
		ExtendedType:  (*Command)(nil),
		ExtensionType: (*DropShardCommand)(nil),
		Field:         130,
		Name:          "meta.DropShardCommand.command",
		Tag:           "bytes,130,opt,name=command",
		Filename:      "internal/meta.proto",
	},
}

// Extension fields to Command.
var (
	// optional meta.CreateNodeCommand command = 101;
	E_CreateNodeCommand_Command = &file_internal_meta_proto_extTypes[0]
	// optional meta.DeleteNodeCommand command = 102;
	E_DeleteNodeCommand_Command = &file_internal_meta_proto_extTypes[1]
	// optional meta.CreateDatabaseCommand command = 103;
	E_CreateDatabaseCommand_Command = &file_internal_meta_proto_extTypes[2]
	// optional meta.DropDatabaseCommand command = 104;
	E_DropDatabaseCommand_Command = &file_internal_meta_proto_extTypes[3]
	// optional meta.CreateRetentionPolicyCommand command = 105;
	E_CreateRetentionPolicyCommand_Command = &file_internal_meta_proto_extTypes[4]
	// optional meta.DropRetentionPolicyCommand command = 106;
	E_DropRetentionPolicyCommand_Command = &file_internal_meta_proto_extTypes[5]
	// optional meta.SetDefaultRetentionPolicyCommand command = 107;
	E_SetDefaultRetentionPolicyCommand_Command = &file_internal_meta_proto_extTypes[6]
	// optional meta.UpdateRetentionPolicyCommand command = 108;
	E_UpdateRetentionPolicyCommand_Command = &file_internal_meta_proto_extTypes[7]
	// optional meta.CreateShardGroupCommand command = 109;
	E_CreateShardGroupCommand_Command = &file_internal_meta_proto_extTypes[8]
	// optional meta.DeleteShardGroupCommand command = 110;
	E_DeleteShardGroupCommand_Command = &file_internal_meta_proto_extTypes[9]
	// optional meta.CreateContinuousQueryCommand command = 111;
	E_CreateContinuousQueryCommand_Command = &file_internal_meta_proto_extTypes[10]
	// optional meta.DropContinuousQueryCommand command = 112;
	E_DropContinuousQueryCommand_Command = &file_internal_meta_proto_extTypes[11]
	// optional meta.CreateUserCommand command = 113;
	E_CreateUserCommand_Command = &file_internal_meta_proto_extTypes[12]
	// optional meta.DropUserCommand command = 114;
	E_DropUserCommand_Command = &file_internal_meta_proto_extTypes[13]
	// optional meta.UpdateUserCommand command = 115;
	E_UpdateUserCommand_Command = &file_internal_meta_proto_extTypes[14]
	// optional meta.SetPrivilegeCommand command = 116;
	E_SetPrivilegeCommand_Command = &file_internal_meta_proto_extTypes[15]
	// optional meta.SetDataCommand command = 117;
	E_SetDataCommand_Command = &file_internal_meta_proto_extTypes[16]
	// optional meta.SetAdminPrivilegeCommand command = 118;
	E_SetAdminPrivilegeCommand_Command = &file_internal_meta_proto_extTypes[17]
	// optional meta.UpdateNodeCommand command = 119;
	E_UpdateNodeCommand_Command = &file_internal_meta_proto_extTypes[18]
	// optional meta.CreateSubscriptionCommand command = 121;
	E_CreateSubscriptionCommand_Command = &file_internal_meta_proto_extTypes[19]
	// optional meta.DropSubscriptionCommand command = 122;
	E_DropSubscriptionCommand_Command = &file_internal_meta_proto_extTypes[20]
	// optional meta.RemovePeerCommand command = 123;
	E_RemovePeerCommand_Command = &file_internal_meta_proto_extTypes[21]
	// optional meta.CreateMetaNodeCommand command = 124;
	E_CreateMetaNodeCommand_Command = &file_internal_meta_proto_extTypes[22]
	// optional meta.CreateDataNodeCommand command = 125;
	E_CreateDataNodeCommand_Command = &file_internal_meta_proto_extTypes[23]
	// optional meta.UpdateDataNodeCommand command = 126;
	E_UpdateDataNodeCommand_Command = &file_internal_meta_proto_extTypes[24]
	// optional meta.DeleteMetaNodeCommand command = 127;
	E_DeleteMetaNodeCommand_Command = &file_internal_meta_proto_extTypes[25]
	// optional meta.DeleteDataNodeCommand command = 128;
	E_DeleteDataNodeCommand_Command = &file_internal_meta_proto_extTypes[26]
	// optional meta.SetMetaNodeCommand command = 129;
	E_SetMetaNodeCommand_Command = &file_internal_meta_proto_extTypes[27]
	// optional meta.DropShardCommand command = 130;
	E_DropShardCommand_Command = &file_internal_meta_proto_extTypes[28]
)

var File_internal_meta_proto protoreflect.FileDescriptor

var file_internal_meta_proto_rawDesc = []byte{
	0x0a, 0x13, 0x69, 0x6e, 0x74, 0x65, 0x72, 0x6e, 0x61, 0x6c, 0x2f, 0x6d, 0x65, 0x74, 0x61, 0x2e,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x04, 0x6d, 0x65, 0x74, 0x61, 0x22, 0x90, 0x03, 0x0a, 0x04,
	0x44, 0x61, 0x74, 0x61, 0x12, 0x12, 0x0a, 0x04, 0x54, 0x65, 0x72, 0x6d, 0x18, 0x01, 0x20, 0x02,
	0x28, 0x04, 0x52, 0x04, 0x54, 0x65, 0x72, 0x6d, 0x12, 0x14, 0x0a, 0x05, 0x49, 0x6e, 0x64, 0x65,
	0x78, 0x18, 0x02, 0x20, 0x02, 0x28, 0x04, 0x52, 0x05, 0x49, 0x6e, 0x64, 0x65, 0x78, 0x12, 0x1c,
	0x0a, 0x09, 0x43, 0x6c, 0x75, 0x73, 0x74, 0x65, 0x72, 0x49, 0x44, 0x18, 0x03, 0x20, 0x02, 0x28,
	0x04, 0x52, 0x09, 0x43, 0x6c, 0x75, 0x73, 0x74, 0x65, 0x72, 0x49, 0x44, 0x12, 0x24, 0x0a, 0x05,
	0x4e, 0x6f, 0x64, 0x65, 0x73, 0x18, 0x04, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x0e, 0x2e, 0x6d, 0x65,
	0x74, 0x61, 0x2e, 0x4e, 0x6f, 0x64, 0x65, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x05, 0x4e, 0x6f, 0x64,
	0x65, 0x73, 0x12, 0x30, 0x0a, 0x09, 0x44, 0x61, 0x74, 0x61, 0x62, 0x61, 0x73, 0x65, 0x73, 0x18,
	0x05, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x12, 0x2e, 0x6d, 0x65, 0x74, 0x61, 0x2e, 0x44, 0x61, 0x74,
	0x61, 0x62, 0x61, 0x73, 0x65, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x09, 0x44, 0x61, 0x74, 0x61, 0x62,
	0x61, 0x73, 0x65, 0x73, 0x12, 0x24, 0x0a, 0x05, 0x55, 0x73, 0x65, 0x72, 0x73, 0x18, 0x06, 0x20,
	0x03, 0x28, 0x0b, 0x32, 0x0e, 0x2e, 0x6d, 0x65, 0x74, 0x61, 0x2e, 0x55, 0x73, 0x65, 0x72, 0x49,
	0x6e, 0x66, 0x6f, 0x52, 0x05, 0x55, 0x73, 0x65, 0x72, 0x73, 0x12, 0x1c, 0x0a, 0x09, 0x4d, 0x61,
	0x78, 0x4e, 0x6f, 0x64, 0x65, 0x49, 0x44, 0x18, 0x07, 0x20, 0x02, 0x28, 0x04, 0x52, 0x09, 0x4d,
	0x61, 0x78, 0x4e, 0x6f, 0x64, 0x65, 0x49, 0x44, 0x12, 0x28, 0x0a, 0x0f, 0x4d, 0x61, 0x78, 0x53,
	0x68, 0x61, 0x72, 0x64, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x49, 0x44, 0x18, 0x08, 0x20, 0x02, 0x28,
	0x04, 0x52, 0x0f, 0x4d, 0x61, 0x78, 0x53, 0x68, 0x61, 0x72, 0x64, 0x47, 0x72, 0x6f, 0x75, 0x70,
	0x49, 0x44, 0x12, 0x1e, 0x0a, 0x0a, 0x4d, 0x61, 0x78, 0x53, 0x68, 0x61, 0x72, 0x64, 0x49, 0x44,
	0x18, 0x09, 0x20, 0x02, 0x28, 0x04, 0x52, 0x0a, 0x4d, 0x61, 0x78, 0x53, 0x68, 0x61, 0x72, 0x64,
	0x49, 0x44, 0x12, 0x2c, 0x0a, 0x09, 0x44, 0x61, 0x74, 0x61, 0x4e, 0x6f, 0x64, 0x65, 0x73, 0x18,
	0x0a, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x0e, 0x2e, 0x6d, 0x65, 0x74, 0x61, 0x2e, 0x4e, 0x6f, 0x64,
	0x65, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x09, 0x44, 0x61, 0x74, 0x61, 0x4e, 0x6f, 0x64, 0x65, 0x73,
	0x12, 0x2c, 0x0a, 0x09, 0x4d, 0x65, 0x74, 0x61, 0x4e, 0x6f, 0x64, 0x65, 0x73, 0x18, 0x0b, 0x20,
	0x03, 0x28, 0x0b, 0x32, 0x0e, 0x2e, 0x6d, 0x65, 0x74, 0x61, 0x2e, 0x4e, 0x6f, 0x64, 0x65, 0x49,
	0x6e, 0x66, 0x6f, 0x52, 0x09, 0x4d, 0x65, 0x74, 0x61, 0x4e, 0x6f, 0x64, 0x65, 0x73, 0x22, 0x48,
	0x0a, 0x08, 0x4e, 0x6f, 0x64, 0x65, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x0e, 0x0a, 0x02, 0x49, 0x44,
	0x18, 0x01, 0x20, 0x02, 0x28, 0x04, 0x52, 0x02, 0x49, 0x44, 0x12, 0x12, 0x0a, 0x04, 0x48, 0x6f,
	0x73, 0x74, 0x18, 0x02, 0x20, 0x02, 0x28, 0x09, 0x52, 0x04, 0x48, 0x6f, 0x73, 0x74, 0x12, 0x18,
	0x0a, 0x07, 0x54, 0x43, 0x50, 0x48, 0x6f, 0x73, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x07, 0x54, 0x43, 0x50, 0x48, 0x6f, 0x73, 0x74, 0x22, 0xec, 0x01, 0x0a, 0x0c, 0x44, 0x61, 0x74,
	0x61, 0x62, 0x61, 0x73, 0x65, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x12, 0x0a, 0x04, 0x4e, 0x61, 0x6d,
	0x65, 0x18, 0x01, 0x20, 0x02, 0x28, 0x09, 0x52, 0x04, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x36, 0x0a,
	0x16, 0x44, 0x65, 0x66, 0x61, 0x75, 0x6c, 0x74, 0x52, 0x65, 0x74, 0x65, 0x6e, 0x74, 0x69, 0x6f,
	0x6e, 0x50, 0x6f, 0x6c, 0x69, 0x63, 0x79, 0x18, 0x02, 0x20, 0x02, 0x28, 0x09, 0x52, 0x16, 0x44,
	0x65, 0x66, 0x61, 0x75, 0x6c, 0x74, 0x52, 0x65, 0x74, 0x65, 0x6e, 0x74, 0x69, 0x6f, 0x6e, 0x50,
	0x6f, 0x6c, 0x69, 0x63, 0x79, 0x12, 0x47, 0x0a, 0x11, 0x52, 0x65, 0x74, 0x65, 0x6e, 0x74, 0x69,
	0x6f, 0x6e, 0x50, 0x6f, 0x6c, 0x69, 0x63, 0x69, 0x65, 0x73, 0x18, 0x03, 0x20, 0x03, 0x28, 0x0b,
	0x32, 0x19, 0x2e, 0x6d, 0x65, 0x74, 0x61, 0x2e, 0x52, 0x65, 0x74, 0x65, 0x6e, 0x74, 0x69, 0x6f,
	0x6e, 0x50, 0x6f, 0x6c, 0x69, 0x63, 0x79, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x11, 0x52, 0x65, 0x74,
	0x65, 0x6e, 0x74, 0x69, 0x6f, 0x6e, 0x50, 0x6f, 0x6c, 0x69, 0x63, 0x69, 0x65, 0x73, 0x12, 0x47,
	0x0a, 0x11, 0x43, 0x6f, 0x6e, 0x74, 0x69, 0x6e, 0x75, 0x6f, 0x75, 0x73, 0x51, 0x75, 0x65, 0x72,
	0x69, 0x65, 0x73, 0x18, 0x04, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x19, 0x2e, 0x6d, 0x65, 0x74, 0x61,
	0x2e, 0x43, 0x6f, 0x6e, 0x74, 0x69, 0x6e, 0x75, 0x6f, 0x75, 0x73, 0x51, 0x75, 0x65, 0x72, 0x79,
	0x49, 0x6e, 0x66, 0x6f, 0x52, 0x11, 0x43, 0x6f, 0x6e, 0x74, 0x69, 0x6e, 0x75, 0x6f, 0x75, 0x73,
	0x51, 0x75, 0x65, 0x72, 0x69, 0x65, 0x73, 0x22, 0x91, 0x01, 0x0a, 0x13, 0x52, 0x65, 0x74, 0x65,
	0x6e, 0x74, 0x69, 0x6f, 0x6e, 0x50, 0x6f, 0x6c, 0x69, 0x63, 0x79, 0x53, 0x70, 0x65, 0x63, 0x12,
	0x12, 0x0a, 0x04, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x4e,
	0x61, 0x6d, 0x65, 0x12, 0x1a, 0x0a, 0x08, 0x44, 0x75, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x08, 0x44, 0x75, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12,
	0x2e, 0x0a, 0x12, 0x53, 0x68, 0x61, 0x72, 0x64, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x44, 0x75, 0x72,
	0x61, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x03, 0x20, 0x01, 0x28, 0x03, 0x52, 0x12, 0x53, 0x68, 0x61,
	0x72, 0x64, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x44, 0x75, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12,
	0x1a, 0x0a, 0x08, 0x52, 0x65, 0x70, 0x6c, 0x69, 0x63, 0x61, 0x4e, 0x18, 0x04, 0x20, 0x01, 0x28,
	0x0d, 0x52, 0x08, 0x52, 0x65, 0x70, 0x6c, 0x69, 0x63, 0x61, 0x4e, 0x22, 0x87, 0x02, 0x0a, 0x13,
	0x52, 0x65, 0x74, 0x65, 0x6e, 0x74, 0x69, 0x6f, 0x6e, 0x50, 0x6f, 0x6c, 0x69, 0x63, 0x79, 0x49,
	0x6e, 0x66, 0x6f, 0x12, 0x12, 0x0a, 0x04, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x02, 0x28,
	0x09, 0x52, 0x04, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x1a, 0x0a, 0x08, 0x44, 0x75, 0x72, 0x61, 0x74,
	0x69, 0x6f, 0x6e, 0x18, 0x02, 0x20, 0x02, 0x28, 0x03, 0x52, 0x08, 0x44, 0x75, 0x72, 0x61, 0x74,
	0x69, 0x6f, 0x6e, 0x12, 0x2e, 0x0a, 0x12, 0x53, 0x68, 0x61, 0x72, 0x64, 0x47, 0x72, 0x6f, 0x75,
	0x70, 0x44, 0x75, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x03, 0x20, 0x02, 0x28, 0x03, 0x52,
	0x12, 0x53, 0x68, 0x61, 0x72, 0x64, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x44, 0x75, 0x72, 0x61, 0x74,
	0x69, 0x6f, 0x6e, 0x12, 0x1a, 0x0a, 0x08, 0x52, 0x65, 0x70, 0x6c, 0x69, 0x63, 0x61, 0x4e, 0x18,
	0x04, 0x20, 0x02, 0x28, 0x0d, 0x52, 0x08, 0x52, 0x65, 0x70, 0x6c, 0x69, 0x63, 0x61, 0x4e, 0x12,
	0x36, 0x0a, 0x0b, 0x53, 0x68, 0x61, 0x72, 0x64, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x73, 0x18, 0x05,
	0x20, 0x03, 0x28, 0x0b, 0x32, 0x14, 0x2e, 0x6d, 0x65, 0x74, 0x61, 0x2e, 0x53, 0x68, 0x61, 0x72,
	0x64, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x0b, 0x53, 0x68, 0x61, 0x72,
	0x64, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x73, 0x12, 0x3c, 0x0a, 0x0d, 0x53, 0x75, 0x62, 0x73, 0x63,
	0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x18, 0x06, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x16,
	0x2e, 0x6d, 0x65, 0x74, 0x61, 0x2e, 0x53, 0x75, 0x62, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69,
	0x6f, 0x6e, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x0d, 0x53, 0x75, 0x62, 0x73, 0x63, 0x72, 0x69, 0x70,
	0x74, 0x69, 0x6f, 0x6e, 0x73, 0x22, 0xc1, 0x01, 0x0a, 0x0e, 0x53, 0x68, 0x61, 0x72, 0x64, 0x47,
	0x72, 0x6f, 0x75, 0x70, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x0e, 0x0a, 0x02, 0x49, 0x44, 0x18, 0x01,
	0x20, 0x02, 0x28, 0x04, 0x52, 0x02, 0x49, 0x44, 0x12, 0x1c, 0x0a, 0x09, 0x53, 0x74, 0x61, 0x72,
	0x74, 0x54, 0x69, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x02, 0x28, 0x03, 0x52, 0x09, 0x53, 0x74, 0x61,
	0x72, 0x74, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x45, 0x6e, 0x64, 0x54, 0x69, 0x6d,
	0x65, 0x18, 0x03, 0x20, 0x02, 0x28, 0x03, 0x52, 0x07, 0x45, 0x6e, 0x64, 0x54, 0x69, 0x6d, 0x65,
	0x12, 0x1c, 0x0a, 0x09, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x64, 0x41, 0x74, 0x18, 0x04, 0x20,
	0x02, 0x28, 0x03, 0x52, 0x09, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x64, 0x41, 0x74, 0x12, 0x27,
	0x0a, 0x06, 0x53, 0x68, 0x61, 0x72, 0x64, 0x73, 0x18, 0x05, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x0f,
	0x2e, 0x6d, 0x65, 0x74, 0x61, 0x2e, 0x53, 0x68, 0x61, 0x72, 0x64, 0x49, 0x6e, 0x66, 0x6f, 0x52,
	0x06, 0x53, 0x68, 0x61, 0x72, 0x64, 0x73, 0x12, 0x20, 0x0a, 0x0b, 0x54, 0x72, 0x75, 0x6e, 0x63,
	0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x18, 0x06, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0b, 0x54, 0x72,
	0x75, 0x6e, 0x63, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x22, 0x65, 0x0a, 0x09, 0x53, 0x68, 0x61,
	0x72, 0x64, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x0e, 0x0a, 0x02, 0x49, 0x44, 0x18, 0x01, 0x20, 0x02,
	0x28, 0x04, 0x52, 0x02, 0x49, 0x44, 0x12, 0x1e, 0x0a, 0x08, 0x4f, 0x77, 0x6e, 0x65, 0x72, 0x49,
	0x44, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x04, 0x42, 0x02, 0x18, 0x01, 0x52, 0x08, 0x4f, 0x77,
	0x6e, 0x65, 0x72, 0x49, 0x44, 0x73, 0x12, 0x28, 0x0a, 0x06, 0x4f, 0x77, 0x6e, 0x65, 0x72, 0x73,
	0x18, 0x03, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x10, 0x2e, 0x6d, 0x65, 0x74, 0x61, 0x2e, 0x53, 0x68,
	0x61, 0x72, 0x64, 0x4f, 0x77, 0x6e, 0x65, 0x72, 0x52, 0x06, 0x4f, 0x77, 0x6e, 0x65, 0x72, 0x73,
	0x22, 0x5e, 0x0a, 0x10, 0x53, 0x75, 0x62, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e,
	0x49, 0x6e, 0x66, 0x6f, 0x12, 0x12, 0x0a, 0x04, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x02,
	0x28, 0x09, 0x52, 0x04, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x4d, 0x6f, 0x64, 0x65,
	0x18, 0x02, 0x20, 0x02, 0x28, 0x09, 0x52, 0x04, 0x4d, 0x6f, 0x64, 0x65, 0x12, 0x22, 0x0a, 0x0c,
	0x44, 0x65, 0x73, 0x74, 0x69, 0x6e, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x18, 0x03, 0x20, 0x03,
	0x28, 0x09, 0x52, 0x0c, 0x44, 0x65, 0x73, 0x74, 0x69, 0x6e, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73,
	0x22, 0x24, 0x0a, 0x0a, 0x53, 0x68, 0x61, 0x72, 0x64, 0x4f, 0x77, 0x6e, 0x65, 0x72, 0x12, 0x16,
	0x0a, 0x06, 0x4e, 0x6f, 0x64, 0x65, 0x49, 0x44, 0x18, 0x01, 0x20, 0x02, 0x28, 0x04, 0x52, 0x06,
	0x4e, 0x6f, 0x64, 0x65, 0x49, 0x44, 0x22, 0x3f, 0x0a, 0x13, 0x43, 0x6f, 0x6e, 0x74, 0x69, 0x6e,
	0x75, 0x6f, 0x75, 0x73, 0x51, 0x75, 0x65, 0x72, 0x79, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x12, 0x0a,
	0x04, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x02, 0x28, 0x09, 0x52, 0x04, 0x4e, 0x61, 0x6d,
	0x65, 0x12, 0x14, 0x0a, 0x05, 0x51, 0x75, 0x65, 0x72, 0x79, 0x18, 0x02, 0x20, 0x02, 0x28, 0x09,
	0x52, 0x05, 0x51, 0x75, 0x65, 0x72, 0x79, 0x22, 0x7d, 0x0a, 0x08, 0x55, 0x73, 0x65, 0x72, 0x49,
	0x6e, 0x66, 0x6f, 0x12, 0x12, 0x0a, 0x04, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x02, 0x28,
	0x09, 0x52, 0x04, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x48, 0x61, 0x73, 0x68, 0x18,
	0x02, 0x20, 0x02, 0x28, 0x09, 0x52, 0x04, 0x48, 0x61, 0x73, 0x68, 0x12, 0x14, 0x0a, 0x05, 0x41,
	0x64, 0x6d, 0x69, 0x6e, 0x18, 0x03, 0x20, 0x02, 0x28, 0x08, 0x52, 0x05, 0x41, 0x64, 0x6d, 0x69,
	0x6e, 0x12, 0x33, 0x0a, 0x0a, 0x50, 0x72, 0x69, 0x76, 0x69, 0x6c, 0x65, 0x67, 0x65, 0x73, 0x18,
	0x04, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x13, 0x2e, 0x6d, 0x65, 0x74, 0x61, 0x2e, 0x55, 0x73, 0x65,
	0x72, 0x50, 0x72, 0x69, 0x76, 0x69, 0x6c, 0x65, 0x67, 0x65, 0x52, 0x0a, 0x50, 0x72, 0x69, 0x76,
	0x69, 0x6c, 0x65, 0x67, 0x65, 0x73, 0x22, 0x49, 0x0a, 0x0d, 0x55, 0x73, 0x65, 0x72, 0x50, 0x72,
	0x69, 0x76, 0x69, 0x6c, 0x65, 0x67, 0x65, 0x12, 0x1a, 0x0a, 0x08, 0x44, 0x61, 0x74, 0x61, 0x62,
	0x61, 0x73, 0x65, 0x18, 0x01, 0x20, 0x02, 0x28, 0x09, 0x52, 0x08, 0x44, 0x61, 0x74, 0x61, 0x62,
	0x61, 0x73, 0x65, 0x12, 0x1c, 0x0a, 0x09, 0x50, 0x72, 0x69, 0x76, 0x69, 0x6c, 0x65, 0x67, 0x65,
	0x18, 0x02, 0x20, 0x02, 0x28, 0x05, 0x52, 0x09, 0x50, 0x72, 0x69, 0x76, 0x69, 0x6c, 0x65, 0x67,
	0x65, 0x22, 0xd9, 0x06, 0x0a, 0x07, 0x43, 0x6f, 0x6d, 0x6d, 0x61, 0x6e, 0x64, 0x12, 0x26, 0x0a,
	0x04, 0x74, 0x79, 0x70, 0x65, 0x18, 0x01, 0x20, 0x02, 0x28, 0x0e, 0x32, 0x12, 0x2e, 0x6d, 0x65,
	0x74, 0x61, 0x2e, 0x43, 0x6f, 0x6d, 0x6d, 0x61, 0x6e, 0x64, 0x2e, 0x54, 0x79, 0x70, 0x65, 0x52,
	0x04, 0x74, 0x79, 0x70, 0x65, 0x22, 0x9b, 0x06, 0x0a, 0x04, 0x54, 0x79, 0x70, 0x65, 0x12, 0x15,
	0x0a, 0x11, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x4e, 0x6f, 0x64, 0x65, 0x43, 0x6f, 0x6d, 0x6d,
	0x61, 0x6e, 0x64, 0x10, 0x01, 0x12, 0x15, 0x0a, 0x11, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x4e,
	0x6f, 0x64, 0x65, 0x43, 0x6f, 0x6d, 0x6d, 0x61, 0x6e, 0x64, 0x10, 0x02, 0x12, 0x19, 0x0a, 0x15,
	0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x44, 0x61, 0x74, 0x61, 0x62, 0x61, 0x73, 0x65, 0x43, 0x6f,
	0x6d, 0x6d, 0x61, 0x6e, 0x64, 0x10, 0x03, 0x12, 0x17, 0x0a, 0x13, 0x44, 0x72, 0x6f, 0x70, 0x44,
	0x61, 0x74, 0x61, 0x62, 0x61, 0x73, 0x65, 0x43, 0x6f, 0x6d, 0x6d, 0x61, 0x6e, 0x64, 0x10, 0x04,
	0x12, 0x20, 0x0a, 0x1c, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x52, 0x65, 0x74, 0x65, 0x6e, 0x74,
	0x69, 0x6f, 0x6e, 0x50, 0x6f, 0x6c, 0x69, 0x63, 0x79, 0x43, 0x6f, 0x6d, 0x6d, 0x61, 0x6e, 0x64,
	0x10, 0x05, 0x12, 0x1e, 0x0a, 0x1a, 0x44, 0x72, 0x6f, 0x70, 0x52, 0x65, 0x74, 0x65, 0x6e, 0x74,
	0x69, 0x6f, 0x6e, 0x50, 0x6f, 0x6c, 0x69, 0x63, 0x79, 0x43, 0x6f, 0x6d, 0x6d, 0x61, 0x6e, 0x64,
	0x10, 0x06, 0x12, 0x24, 0x0a, 0x20, 0x53, 0x65, 0x74, 0x44, 0x65, 0x66, 0x61, 0x75, 0x6c, 0x74,
	0x52, 0x65, 0x74, 0x65, 0x6e, 0x74, 0x69, 0x6f, 0x6e, 0x50, 0x6f, 0x6c, 0x69, 0x63, 0x79, 0x43,
	0x6f, 0x6d, 0x6d, 0x61, 0x6e, 0x64, 0x10, 0x07, 0x12, 0x20, 0x0a, 0x1c, 0x55, 0x70, 0x64, 0x61,
	0x74, 0x65, 0x52, 0x65, 0x74, 0x65, 0x6e, 0x74, 0x69, 0x6f, 0x6e, 0x50, 0x6f, 0x6c, 0x69, 0x63,
	0x79, 0x43, 0x6f, 0x6d, 0x6d, 0x61, 0x6e, 0x64, 0x10, 0x08, 0x12, 0x1b, 0x0a, 0x17, 0x43, 0x72,
	0x65, 0x61, 0x74, 0x65, 0x53, 0x68, 0x61, 0x72, 0x64, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x43, 0x6f,
	0x6d, 0x6d, 0x61, 0x6e, 0x64, 0x10, 0x09, 0x12, 0x1b, 0x0a, 0x17, 0x44, 0x65, 0x6c, 0x65, 0x74,
	0x65, 0x53, 0x68, 0x61, 0x72, 0x64, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x43, 0x6f, 0x6d, 0x6d, 0x61,
	0x6e, 0x64, 0x10, 0x0a, 0x12, 0x20, 0x0a, 0x1c, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x43, 0x6f,
	0x6e, 0x74, 0x69, 0x6e, 0x75, 0x6f, 0x75, 0x73, 0x51, 0x75, 0x65, 0x72, 0x79, 0x43, 0x6f, 0x6d,
	0x6d, 0x61, 0x6e, 0x64, 0x10, 0x0b, 0x12, 0x1e, 0x0a, 0x1a, 0x44, 0x72, 0x6f, 0x70, 0x43, 0x6f,
	0x6e, 0x74, 0x69, 0x6e, 0x75, 0x6f, 0x75, 0x73, 0x51, 0x75, 0x65, 0x72, 0x79, 0x43, 0x6f, 0x6d,
	0x6d, 0x61, 0x6e, 0x64, 0x10, 0x0c, 0x12, 0x15, 0x0a, 0x11, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65,
	0x55, 0x73, 0x65, 0x72, 0x43, 0x6f, 0x6d, 0x6d, 0x61, 0x6e, 0x64, 0x10, 0x0d, 0x12, 0x13, 0x0a,
	0x0f, 0x44, 0x72, 0x6f, 0x70, 0x55, 0x73, 0x65, 0x72, 0x43, 0x6f, 0x6d, 0x6d, 0x61, 0x6e, 0x64,
	0x10, 0x0e, 0x12, 0x15, 0x0a, 0x11, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x55, 0x73, 0x65, 0x72,
	0x43, 0x6f, 0x6d, 0x6d, 0x61, 0x6e, 0x64, 0x10, 0x0f, 0x12, 0x17, 0x0a, 0x13, 0x53, 0x65, 0x74,
	0x50, 0x72, 0x69, 0x76, 0x69, 0x6c, 0x65, 0x67, 0x65, 0x43, 0x6f, 0x6d, 0x6d, 0x61, 0x6e, 0x64,
	0x10, 0x10, 0x12, 0x12, 0x0a, 0x0e, 0x53, 0x65, 0x74, 0x44, 0x61, 0x74, 0x61, 0x43, 0x6f, 0x6d,
	0x6d, 0x61, 0x6e, 0x64, 0x10, 0x11, 0x12, 0x1c, 0x0a, 0x18, 0x53, 0x65, 0x74, 0x41, 0x64, 0x6d,
	0x69, 0x6e, 0x50, 0x72, 0x69, 0x76, 0x69, 0x6c, 0x65, 0x67, 0x65, 0x43, 0x6f, 0x6d, 0x6d, 0x61,
	0x6e, 0x64, 0x10, 0x12, 0x12, 0x15, 0x0a, 0x11, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x4e, 0x6f,
	0x64, 0x65, 0x43, 0x6f, 0x6d, 0x6d, 0x61, 0x6e, 0x64, 0x10, 0x13, 0x12, 0x1d, 0x0a, 0x19, 0x43,
	0x72, 0x65, 0x61, 0x74, 0x65, 0x53, 0x75, 0x62, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f,
	0x6e, 0x43, 0x6f, 0x6d, 0x6d, 0x61, 0x6e, 0x64, 0x10, 0x15, 0x12, 0x1b, 0x0a, 0x17, 0x44, 0x72,
	0x6f, 0x70, 0x53, 0x75, 0x62, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x43, 0x6f,
	0x6d, 0x6d, 0x61, 0x6e, 0x64, 0x10, 0x16, 0x12, 0x15, 0x0a, 0x11, 0x52, 0x65, 0x6d, 0x6f, 0x76,
	0x65, 0x50, 0x65, 0x65, 0x72, 0x43, 0x6f, 0x6d, 0x6d, 0x61, 0x6e, 0x64, 0x10, 0x17, 0x12, 0x19,
	0x0a, 0x15, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x4d, 0x65, 0x74, 0x61, 0x4e, 0x6f, 0x64, 0x65,
	0x43, 0x6f, 0x6d, 0x6d, 0x61, 0x6e, 0x64, 0x10, 0x18, 0x12, 0x19, 0x0a, 0x15, 0x43, 0x72, 0x65,
	0x61, 0x74, 0x65, 0x44, 0x61, 0x74, 0x61, 0x4e, 0x6f, 0x64, 0x65, 0x43, 0x6f, 0x6d, 0x6d, 0x61,
	0x6e, 0x64, 0x10, 0x19, 0x12, 0x19, 0x0a, 0x15, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x44, 0x61,
	0x74, 0x61, 0x4e, 0x6f, 0x64, 0x65, 0x43, 0x6f, 0x6d, 0x6d, 0x61, 0x6e, 0x64, 0x10, 0x1a, 0x12,
	0x19, 0x0a, 0x15, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x4d, 0x65, 0x74, 0x61, 0x4e, 0x6f, 0x64,
	0x65, 0x43, 0x6f, 0x6d, 0x6d, 0x61, 0x6e, 0x64, 0x10, 0x1b, 0x12, 0x19, 0x0a, 0x15, 0x44, 0x65,
	0x6c, 0x65, 0x74, 0x65, 0x44, 0x61, 0x74, 0x61, 0x4e, 0x6f, 0x64, 0x65, 0x43, 0x6f, 0x6d, 0x6d,
	0x61, 0x6e, 0x64, 0x10, 0x1c, 0x12, 0x16, 0x0a, 0x12, 0x53, 0x65, 0x74, 0x4d, 0x65, 0x74, 0x61,
	0x4e, 0x6f, 0x64, 0x65, 0x43, 0x6f, 0x6d, 0x6d, 0x61, 0x6e, 0x64, 0x10, 0x1d, 0x12, 0x14, 0x0a,
	0x10, 0x44, 0x72, 0x6f, 0x70, 0x53, 0x68, 0x61, 0x72, 0x64, 0x43, 0x6f, 0x6d, 0x6d, 0x61, 0x6e,
	0x64, 0x10, 0x1e, 0x2a, 0x08, 0x08, 0x64, 0x10, 0x80, 0x80, 0x80, 0x80, 0x02, 0x22, 0x7d, 0x0a,
	0x11, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x4e, 0x6f, 0x64, 0x65, 0x43, 0x6f, 0x6d, 0x6d, 0x61,
	0x6e, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x48, 0x6f, 0x73, 0x74, 0x18, 0x01, 0x20, 0x02, 0x28, 0x09,
	0x52, 0x04, 0x48, 0x6f, 0x73, 0x74, 0x12, 0x12, 0x0a, 0x04, 0x52, 0x61, 0x6e, 0x64, 0x18, 0x02,
	0x20, 0x02, 0x28, 0x04, 0x52, 0x04, 0x52, 0x61, 0x6e, 0x64, 0x32, 0x40, 0x0a, 0x07, 0x63, 0x6f,
	0x6d, 0x6d, 0x61, 0x6e, 0x64, 0x12, 0x0d, 0x2e, 0x6d, 0x65, 0x74, 0x61, 0x2e, 0x43, 0x6f, 0x6d,
	0x6d, 0x61, 0x6e, 0x64, 0x18, 0x65, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x17, 0x2e, 0x6d, 0x65, 0x74,
	0x61, 0x2e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x4e, 0x6f, 0x64, 0x65, 0x43, 0x6f, 0x6d, 0x6d,
	0x61, 0x6e, 0x64, 0x52, 0x07, 0x63, 0x6f, 0x6d, 0x6d, 0x61, 0x6e, 0x64, 0x22, 0x7b, 0x0a, 0x11,
	0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x4e, 0x6f, 0x64, 0x65, 0x43, 0x6f, 0x6d, 0x6d, 0x61, 0x6e,
	0x64, 0x12, 0x0e, 0x0a, 0x02, 0x49, 0x44, 0x18, 0x01, 0x20, 0x02, 0x28, 0x04, 0x52, 0x02, 0x49,
	0x44, 0x12, 0x14, 0x0a, 0x05, 0x46, 0x6f, 0x72, 0x63, 0x65, 0x18, 0x02, 0x20, 0x02, 0x28, 0x08,
	0x52, 0x05, 0x46, 0x6f, 0x72, 0x63, 0x65, 0x32, 0x40, 0x0a, 0x07, 0x63, 0x6f, 0x6d, 0x6d, 0x61,
	0x6e, 0x64, 0x12, 0x0d, 0x2e, 0x6d, 0x65, 0x74, 0x61, 0x2e, 0x43, 0x6f, 0x6d, 0x6d, 0x61, 0x6e,
	0x64, 0x18, 0x66, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x17, 0x2e, 0x6d, 0x65, 0x74, 0x61, 0x2e, 0x44,
	0x65, 0x6c, 0x65, 0x74, 0x65, 0x4e, 0x6f, 0x64, 0x65, 0x43, 0x6f, 0x6d, 0x6d, 0x61, 0x6e, 0x64,
	0x52, 0x07, 0x63, 0x6f, 0x6d, 0x6d, 0x61, 0x6e, 0x64, 0x22, 0xb6, 0x01, 0x0a, 0x15, 0x43, 0x72,
	0x65, 0x61, 0x74, 0x65, 0x44, 0x61, 0x74, 0x61, 0x62, 0x61, 0x73, 0x65, 0x43, 0x6f, 0x6d, 0x6d,
	0x61, 0x6e, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x02, 0x28,
	0x09, 0x52, 0x04, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x43, 0x0a, 0x0f, 0x52, 0x65, 0x74, 0x65, 0x6e,
	0x74, 0x69, 0x6f, 0x6e, 0x50, 0x6f, 0x6c, 0x69, 0x63, 0x79, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x19, 0x2e, 0x6d, 0x65, 0x74, 0x61, 0x2e, 0x52, 0x65, 0x74, 0x65, 0x6e, 0x74, 0x69, 0x6f,
	0x6e, 0x50, 0x6f, 0x6c, 0x69, 0x63, 0x79, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x0f, 0x52, 0x65, 0x74,
	0x65, 0x6e, 0x74, 0x69, 0x6f, 0x6e, 0x50, 0x6f, 0x6c, 0x69, 0x63, 0x79, 0x32, 0x44, 0x0a, 0x07,
	0x63, 0x6f, 0x6d, 0x6d, 0x61, 0x6e, 0x64, 0x12, 0x0d, 0x2e, 0x6d, 0x65, 0x74, 0x61, 0x2e, 0x43,
	0x6f, 0x6d, 0x6d, 0x61, 0x6e, 0x64, 0x18, 0x67, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1b, 0x2e, 0x6d,
	0x65, 0x74, 0x61, 0x2e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x44, 0x61, 0x74, 0x61, 0x62, 0x61,
	0x73, 0x65, 0x43, 0x6f, 0x6d, 0x6d, 0x61, 0x6e, 0x64, 0x52, 0x07, 0x63, 0x6f, 0x6d, 0x6d, 0x61,
	0x6e, 0x64, 0x22, 0x6d, 0x0a, 0x13, 0x44, 0x72, 0x6f, 0x70, 0x44, 0x61, 0x74, 0x61, 0x62, 0x61,
	0x73, 0x65, 0x43, 0x6f, 0x6d, 0x6d, 0x61, 0x6e, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x4e, 0x61, 0x6d,
	0x65, 0x18, 0x01, 0x20, 0x02, 0x28, 0x09, 0x52, 0x04, 0x4e, 0x61, 0x6d, 0x65, 0x32, 0x42, 0x0a,
	0x07, 0x63, 0x6f, 0x6d, 0x6d, 0x61, 0x6e, 0x64, 0x12, 0x0d, 0x2e, 0x6d, 0x65, 0x74, 0x61, 0x2e,
	0x43, 0x6f, 0x6d, 0x6d, 0x61, 0x6e, 0x64, 0x18, 0x68, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x19, 0x2e,
	0x6d, 0x65, 0x74, 0x61, 0x2e, 0x44, 0x72, 0x6f, 0x70, 0x44, 0x61, 0x74, 0x61, 0x62, 0x61, 0x73,
	0x65, 0x43, 0x6f, 0x6d, 0x6d, 0x61, 0x6e, 0x64, 0x52, 0x07, 0x63, 0x6f, 0x6d, 0x6d, 0x61, 0x6e,
	0x64, 0x22, 0xcc, 0x01, 0x0a, 0x1c, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x52, 0x65, 0x74, 0x65,
	0x6e, 0x74, 0x69, 0x6f, 0x6e, 0x50, 0x6f, 0x6c, 0x69, 0x63, 0x79, 0x43, 0x6f, 0x6d, 0x6d, 0x61,
	0x6e, 0x64, 0x12, 0x1a, 0x0a, 0x08, 0x44, 0x61, 0x74, 0x61, 0x62, 0x61, 0x73, 0x65, 0x18, 0x01,
	0x20, 0x02, 0x28, 0x09, 0x52, 0x08, 0x44, 0x61, 0x74, 0x61, 0x62, 0x61, 0x73, 0x65, 0x12, 0x43,
	0x0a, 0x0f, 0x52, 0x65, 0x74, 0x65, 0x6e, 0x74, 0x69, 0x6f, 0x6e, 0x50, 0x6f, 0x6c, 0x69, 0x63,
	0x79, 0x18, 0x02, 0x20, 0x02, 0x28, 0x0b, 0x32, 0x19, 0x2e, 0x6d, 0x65, 0x74, 0x61, 0x2e, 0x52,
	0x65, 0x74, 0x65, 0x6e, 0x74, 0x69, 0x6f, 0x6e, 0x50, 0x6f, 0x6c, 0x69, 0x63, 0x79, 0x49, 0x6e,
	0x66, 0x6f, 0x52, 0x0f, 0x52, 0x65, 0x74, 0x65, 0x6e, 0x74, 0x69, 0x6f, 0x6e, 0x50, 0x6f, 0x6c,
	0x69, 0x63, 0x79, 0x32, 0x4b, 0x0a, 0x07, 0x63, 0x6f, 0x6d, 0x6d, 0x61, 0x6e, 0x64, 0x12, 0x0d,
	0x2e, 0x6d, 0x65, 0x74, 0x61, 0x2e, 0x43, 0x6f, 0x6d, 0x6d, 0x61, 0x6e, 0x64, 0x18, 0x69, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x22, 0x2e, 0x6d, 0x65, 0x74, 0x61, 0x2e, 0x43, 0x72, 0x65, 0x61, 0x74,
	0x65, 0x52, 0x65, 0x74, 0x65, 0x6e, 0x74, 0x69, 0x6f, 0x6e, 0x50, 0x6f, 0x6c, 0x69, 0x63, 0x79,
	0x43, 0x6f, 0x6d, 0x6d, 0x61, 0x6e, 0x64, 0x52, 0x07, 0x63, 0x6f, 0x6d, 0x6d, 0x61, 0x6e, 0x64,
	0x22, 0x97, 0x01, 0x0a, 0x1a, 0x44, 0x72, 0x6f, 0x70, 0x52, 0x65, 0x74, 0x65, 0x6e, 0x74, 0x69,
	0x6f, 0x6e, 0x50, 0x6f, 0x6c, 0x69, 0x63, 0x79, 0x43, 0x6f, 0x6d, 0x6d, 0x61, 0x6e, 0x64, 0x12,
	0x1a, 0x0a, 0x08, 0x44, 0x61, 0x74, 0x61, 0x62, 0x61, 0x73, 0x65, 0x18, 0x01, 0x20, 0x02, 0x28,
	0x09, 0x52, 0x08, 0x44, 0x61, 0x74, 0x61, 0x62, 0x61, 0x73, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x4e,
	0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x02, 0x28, 0x09, 0x52, 0x04, 0x4e, 0x61, 0x6d, 0x65, 0x32,
	0x49, 0x0a, 0x07, 0x63, 0x6f, 0x6d, 0x6d, 0x61, 0x6e, 0x64, 0x12, 0x0d, 0x2e, 0x6d, 0x65, 0x74,
	0x61, 0x2e, 0x43, 0x6f, 0x6d, 0x6d, 0x61, 0x6e, 0x64, 0x18, 0x6a, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x20, 0x2e, 0x6d, 0x65, 0x74, 0x61, 0x2e, 0x44, 0x72, 0x6f, 0x70, 0x52, 0x65, 0x74, 0x65, 0x6e,
	0x74, 0x69, 0x6f, 0x6e, 0x50, 0x6f, 0x6c, 0x69, 0x63, 0x79, 0x43, 0x6f, 0x6d, 0x6d, 0x61, 0x6e,
	0x64, 0x52, 0x07, 0x63, 0x6f, 0x6d, 0x6d, 0x61, 0x6e, 0x64, 0x22, 0xa3, 0x01, 0x0a, 0x20, 0x53,
	0x65, 0x74, 0x44, 0x65, 0x66, 0x61, 0x75, 0x6c, 0x74, 0x52, 0x65, 0x74, 0x65, 0x6e, 0x74, 0x69,
	0x6f, 0x6e, 0x50, 0x6f, 0x6c, 0x69, 0x63, 0x79, 0x43, 0x6f, 0x6d, 0x6d, 0x61, 0x6e, 0x64, 0x12,
	0x1a, 0x0a, 0x08, 0x44, 0x61, 0x74, 0x61, 0x62, 0x61, 0x73, 0x65, 0x18, 0x01, 0x20, 0x02, 0x28,
	0x09, 0x52, 0x08, 0x44, 0x61, 0x74, 0x61, 0x62, 0x61, 0x73, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x4e,
	0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x02, 0x28, 0x09, 0x52, 0x04, 0x4e, 0x61, 0x6d, 0x65, 0x32,
	0x4f, 0x0a, 0x07, 0x63, 0x6f, 0x6d, 0x6d, 0x61, 0x6e, 0x64, 0x12, 0x0d, 0x2e, 0x6d, 0x65, 0x74,
	0x61, 0x2e, 0x43, 0x6f, 0x6d, 0x6d, 0x61, 0x6e, 0x64, 0x18, 0x6b, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x26, 0x2e, 0x6d, 0x65, 0x74, 0x61, 0x2e, 0x53, 0x65, 0x74, 0x44, 0x65, 0x66, 0x61, 0x75, 0x6c,
	0x74, 0x52, 0x65, 0x74, 0x65, 0x6e, 0x74, 0x69, 0x6f, 0x6e, 0x50, 0x6f, 0x6c, 0x69, 0x63, 0x79,
	0x43, 0x6f, 0x6d, 0x6d, 0x61, 0x6e, 0x64, 0x52, 0x07, 0x63, 0x6f, 0x6d, 0x6d, 0x61, 0x6e, 0x64,
	0x22, 0xed, 0x01, 0x0a, 0x1c, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x52, 0x65, 0x74, 0x65, 0x6e,
	0x74, 0x69, 0x6f, 0x6e, 0x50, 0x6f, 0x6c, 0x69, 0x63, 0x79, 0x43, 0x6f, 0x6d, 0x6d, 0x61, 0x6e,
	0x64, 0x12, 0x1a, 0x0a, 0x08, 0x44, 0x61, 0x74, 0x61, 0x62, 0x61, 0x73, 0x65, 0x18, 0x01, 0x20,
	0x02, 0x28, 0x09, 0x52, 0x08, 0x44, 0x61, 0x74, 0x61, 0x62, 0x61, 0x73, 0x65, 0x12, 0x12, 0x0a,
	0x04, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x02, 0x28, 0x09, 0x52, 0x04, 0x4e, 0x61, 0x6d,
	0x65, 0x12, 0x18, 0x0a, 0x07, 0x4e, 0x65, 0x77, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x03, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x07, 0x4e, 0x65, 0x77, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x1a, 0x0a, 0x08, 0x44,
	0x75, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x04, 0x20, 0x01, 0x28, 0x03, 0x52, 0x08, 0x44,
	0x75, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x1a, 0x0a, 0x08, 0x52, 0x65, 0x70, 0x6c, 0x69,
	0x63, 0x61, 0x4e, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x08, 0x52, 0x65, 0x70, 0x6c, 0x69,
	0x63, 0x61, 0x4e, 0x32, 0x4b, 0x0a, 0x07, 0x63, 0x6f, 0x6d, 0x6d, 0x61, 0x6e, 0x64, 0x12, 0x0d,
	0x2e, 0x6d, 0x65, 0x74, 0x61, 0x2e, 0x43, 0x6f, 0x6d, 0x6d, 0x61, 0x6e, 0x64, 0x18, 0x6c, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x22, 0x2e, 0x6d, 0x65, 0x74, 0x61, 0x2e, 0x55, 0x70, 0x64, 0x61, 0x74,
	0x65, 0x52, 0x65, 0x74, 0x65, 0x6e, 0x74, 0x69, 0x6f, 0x6e, 0x50, 0x6f, 0x6c, 0x69, 0x63, 0x79,
	0x43, 0x6f, 0x6d, 0x6d, 0x61, 0x6e, 0x64, 0x52, 0x07, 0x63, 0x6f, 0x6d, 0x6d, 0x61, 0x6e, 0x64,
	0x22, 0xb3, 0x01, 0x0a, 0x17, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x53, 0x68, 0x61, 0x72, 0x64,
	0x47, 0x72, 0x6f, 0x75, 0x70, 0x43, 0x6f, 0x6d, 0x6d, 0x61, 0x6e, 0x64, 0x12, 0x1a, 0x0a, 0x08,
	0x44, 0x61, 0x74, 0x61, 0x62, 0x61, 0x73, 0x65, 0x18, 0x01, 0x20, 0x02, 0x28, 0x09, 0x52, 0x08,
	0x44, 0x61, 0x74, 0x61, 0x62, 0x61, 0x73, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x50, 0x6f, 0x6c, 0x69,
	0x63, 0x79, 0x18, 0x02, 0x20, 0x02, 0x28, 0x09, 0x52, 0x06, 0x50, 0x6f, 0x6c, 0x69, 0x63, 0x79,
	0x12, 0x1c, 0x0a, 0x09, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x18, 0x03, 0x20,
	0x02, 0x28, 0x03, 0x52, 0x09, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x32, 0x46,
	0x0a, 0x07, 0x63, 0x6f, 0x6d, 0x6d, 0x61, 0x6e, 0x64, 0x12, 0x0d, 0x2e, 0x6d, 0x65, 0x74, 0x61,
	0x2e, 0x43, 0x6f, 0x6d, 0x6d, 0x61, 0x6e, 0x64, 0x18, 0x6d, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1d,
	0x2e, 0x6d, 0x65, 0x74, 0x61, 0x2e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x53, 0x68, 0x61, 0x72,
	0x64, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x43, 0x6f, 0x6d, 0x6d, 0x61, 0x6e, 0x64, 0x52, 0x07, 0x63,
	0x6f, 0x6d, 0x6d, 0x61, 0x6e, 0x64, 0x22, 0xb9, 0x01, 0x0a, 0x17, 0x44, 0x65, 0x6c, 0x65, 0x74,
	0x65, 0x53, 0x68, 0x61, 0x72, 0x64, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x43, 0x6f, 0x6d, 0x6d, 0x61,
	0x6e, 0x64, 0x12, 0x1a, 0x0a, 0x08, 0x44, 0x61, 0x74, 0x61, 0x62, 0x61, 0x73, 0x65, 0x18, 0x01,
	0x20, 0x02, 0x28, 0x09, 0x52, 0x08, 0x44, 0x61, 0x74, 0x61, 0x62, 0x61, 0x73, 0x65, 0x12, 0x16,
	0x0a, 0x06, 0x50, 0x6f, 0x6c, 0x69, 0x63, 0x79, 0x18, 0x02, 0x20, 0x02, 0x28, 0x09, 0x52, 0x06,
	0x50, 0x6f, 0x6c, 0x69, 0x63, 0x79, 0x12, 0x22, 0x0a, 0x0c, 0x53, 0x68, 0x61, 0x72, 0x64, 0x47,
	0x72, 0x6f, 0x75, 0x70, 0x49, 0x44, 0x18, 0x03, 0x20, 0x02, 0x28, 0x04, 0x52, 0x0c, 0x53, 0x68,
	0x61, 0x72, 0x64, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x49, 0x44, 0x32, 0x46, 0x0a, 0x07, 0x63, 0x6f,
	0x6d, 0x6d, 0x61, 0x6e, 0x64, 0x12, 0x0d, 0x2e, 0x6d, 0x65, 0x74, 0x61, 0x2e, 0x43, 0x6f, 0x6d,
	0x6d, 0x61, 0x6e, 0x64, 0x18, 0x6e, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1d, 0x2e, 0x6d, 0x65, 0x74,
	0x61, 0x2e, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x53, 0x68, 0x61, 0x72, 0x64, 0x47, 0x72, 0x6f,
	0x75, 0x70, 0x43, 0x6f, 0x6d, 0x6d, 0x61, 0x6e, 0x64, 0x52, 0x07, 0x63, 0x6f, 0x6d, 0x6d, 0x61,
	0x6e, 0x64, 0x22, 0xb1, 0x01, 0x0a, 0x1c, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x43, 0x6f, 0x6e,
	0x74, 0x69, 0x6e, 0x75, 0x6f, 0x75, 0x73, 0x51, 0x75, 0x65, 0x72, 0x79, 0x43, 0x6f, 0x6d, 0x6d,
	0x61, 0x6e, 0x64, 0x12, 0x1a, 0x0a, 0x08, 0x44, 0x61, 0x74, 0x61, 0x62, 0x61, 0x73, 0x65, 0x18,
	0x01, 0x20, 0x02, 0x28, 0x09, 0x52, 0x08, 0x44, 0x61, 0x74, 0x61, 0x62, 0x61, 0x73, 0x65, 0x12,
	0x12, 0x0a, 0x04, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x02, 0x28, 0x09, 0x52, 0x04, 0x4e,
	0x61, 0x6d, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x51, 0x75, 0x65, 0x72, 0x79, 0x18, 0x03, 0x20, 0x02,
	0x28, 0x09, 0x52, 0x05, 0x51, 0x75, 0x65, 0x72, 0x79, 0x32, 0x4b, 0x0a, 0x07, 0x63, 0x6f, 0x6d,
	0x6d, 0x61, 0x6e, 0x64, 0x12, 0x0d, 0x2e, 0x6d, 0x65, 0x74, 0x61, 0x2e, 0x43, 0x6f, 0x6d, 0x6d,
	0x61, 0x6e, 0x64, 0x18, 0x6f, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x22, 0x2e, 0x6d, 0x65, 0x74, 0x61,
	0x2e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x43, 0x6f, 0x6e, 0x74, 0x69, 0x6e, 0x75, 0x6f, 0x75,
	0x73, 0x51, 0x75, 0x65, 0x72, 0x79, 0x43, 0x6f, 0x6d, 0x6d, 0x61, 0x6e, 0x64, 0x52, 0x07, 0x63,
	0x6f, 0x6d, 0x6d, 0x61, 0x6e, 0x64, 0x22, 0x97, 0x01, 0x0a, 0x1a, 0x44, 0x72, 0x6f, 0x70, 0x43,
	0x6f, 0x6e, 0x74, 0x69, 0x6e, 0x75, 0x6f, 0x75, 0x73, 0x51, 0x75, 0x65, 0x72, 0x79, 0x43, 0x6f,
	0x6d, 0x6d, 0x61, 0x6e, 0x64, 0x12, 0x1a, 0x0a, 0x08, 0x44, 0x61, 0x74, 0x61, 0x62, 0x61, 0x73,
	0x65, 0x18, 0x01, 0x20, 0x02, 0x28, 0x09, 0x52, 0x08, 0x44, 0x61, 0x74, 0x61, 0x62, 0x61, 0x73,
	0x65, 0x12, 0x12, 0x0a, 0x04, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x02, 0x28, 0x09, 0x52,
	0x04, 0x4e, 0x61, 0x6d, 0x65, 0x32, 0x49, 0x0a, 0x07, 0x63, 0x6f, 0x6d, 0x6d, 0x61, 0x6e, 0x64,
	0x12, 0x0d, 0x2e, 0x6d, 0x65, 0x74, 0x61, 0x2e, 0x43, 0x6f, 0x6d, 0x6d, 0x61, 0x6e, 0x64, 0x18,
	0x70, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x20, 0x2e, 0x6d, 0x65, 0x74, 0x61, 0x2e, 0x44, 0x72, 0x6f,
	0x70, 0x43, 0x6f, 0x6e, 0x74, 0x69, 0x6e, 0x75, 0x6f, 0x75, 0x73, 0x51, 0x75, 0x65, 0x72, 0x79,
	0x43, 0x6f, 0x6d, 0x6d, 0x61, 0x6e, 0x64, 0x52, 0x07, 0x63, 0x6f, 0x6d, 0x6d, 0x61, 0x6e, 0x64,
	0x22, 0x93, 0x01, 0x0a, 0x11, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x55, 0x73, 0x65, 0x72, 0x43,
	0x6f, 0x6d, 0x6d, 0x61, 0x6e, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x01,
	0x20, 0x02, 0x28, 0x09, 0x52, 0x04, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x48, 0x61,
	0x73, 0x68, 0x18, 0x02, 0x20, 0x02, 0x28, 0x09, 0x52, 0x04, 0x48, 0x61, 0x73, 0x68, 0x12, 0x14,
	0x0a, 0x05, 0x41, 0x64, 0x6d, 0x69, 0x6e, 0x18, 0x03, 0x20, 0x02, 0x28, 0x08, 0x52, 0x05, 0x41,
	0x64, 0x6d, 0x69, 0x6e, 0x32, 0x40, 0x0a, 0x07, 0x63, 0x6f, 0x6d, 0x6d, 0x61, 0x6e, 0x64, 0x12,
	0x0d, 0x2e, 0x6d, 0x65, 0x74, 0x61, 0x2e, 0x43, 0x6f, 0x6d, 0x6d, 0x61, 0x6e, 0x64, 0x18, 0x71,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x17, 0x2e, 0x6d, 0x65, 0x74, 0x61, 0x2e, 0x43, 0x72, 0x65, 0x61,
	0x74, 0x65, 0x55, 0x73, 0x65, 0x72, 0x43, 0x6f, 0x6d, 0x6d, 0x61, 0x6e, 0x64, 0x52, 0x07, 0x63,
	0x6f, 0x6d, 0x6d, 0x61, 0x6e, 0x64, 0x22, 0x65, 0x0a, 0x0f, 0x44, 0x72, 0x6f, 0x70, 0x55, 0x73,
	0x65, 0x72, 0x43, 0x6f, 0x6d, 0x6d, 0x61, 0x6e, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x4e, 0x61, 0x6d,
	0x65, 0x18, 0x01, 0x20, 0x02, 0x28, 0x09, 0x52, 0x04, 0x4e, 0x61, 0x6d, 0x65, 0x32, 0x3e, 0x0a,
	0x07, 0x63, 0x6f, 0x6d, 0x6d, 0x61, 0x6e, 0x64, 0x12, 0x0d, 0x2e, 0x6d, 0x65, 0x74, 0x61, 0x2e,
	0x43, 0x6f, 0x6d, 0x6d, 0x61, 0x6e, 0x64, 0x18, 0x72, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x15, 0x2e,
	0x6d, 0x65, 0x74, 0x61, 0x2e, 0x44, 0x72, 0x6f, 0x70, 0x55, 0x73, 0x65, 0x72, 0x43, 0x6f, 0x6d,
	0x6d, 0x61, 0x6e, 0x64, 0x52, 0x07, 0x63, 0x6f, 0x6d, 0x6d, 0x61, 0x6e, 0x64, 0x22, 0x7d, 0x0a,
	0x11, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x55, 0x73, 0x65, 0x72, 0x43, 0x6f, 0x6d, 0x6d, 0x61,
	0x6e, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x02, 0x28, 0x09,
	0x52, 0x04, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x48, 0x61, 0x73, 0x68, 0x18, 0x02,
	0x20, 0x02, 0x28, 0x09, 0x52, 0x04, 0x48, 0x61, 0x73, 0x68, 0x32, 0x40, 0x0a, 0x07, 0x63, 0x6f,
	0x6d, 0x6d, 0x61, 0x6e, 0x64, 0x12, 0x0d, 0x2e, 0x6d, 0x65, 0x74, 0x61, 0x2e, 0x43, 0x6f, 0x6d,
	0x6d, 0x61, 0x6e, 0x64, 0x18, 0x73, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x17, 0x2e, 0x6d, 0x65, 0x74,
	0x61, 0x2e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x55, 0x73, 0x65, 0x72, 0x43, 0x6f, 0x6d, 0x6d,
	0x61, 0x6e, 0x64, 0x52, 0x07, 0x63, 0x6f, 0x6d, 0x6d, 0x61, 0x6e, 0x64, 0x22, 0xaf, 0x01, 0x0a,
	0x13, 0x53, 0x65, 0x74, 0x50, 0x72, 0x69, 0x76, 0x69, 0x6c, 0x65, 0x67, 0x65, 0x43, 0x6f, 0x6d,
	0x6d, 0x61, 0x6e, 0x64, 0x12, 0x1a, 0x0a, 0x08, 0x55, 0x73, 0x65, 0x72, 0x6e, 0x61, 0x6d, 0x65,
	0x18, 0x01, 0x20, 0x02, 0x28, 0x09, 0x52, 0x08, 0x55, 0x73, 0x65, 0x72, 0x6e, 0x61, 0x6d, 0x65,
	0x12, 0x1a, 0x0a, 0x08, 0x44, 0x61, 0x74, 0x61, 0x62, 0x61, 0x73, 0x65, 0x18, 0x02, 0x20, 0x02,
	0x28, 0x09, 0x52, 0x08, 0x44, 0x61, 0x74, 0x61, 0x62, 0x61, 0x73, 0x65, 0x12, 0x1c, 0x0a, 0x09,
	0x50, 0x72, 0x69, 0x76, 0x69, 0x6c, 0x65, 0x67, 0x65, 0x18, 0x03, 0x20, 0x02, 0x28, 0x05, 0x52,
	0x09, 0x50, 0x72, 0x69, 0x76, 0x69, 0x6c, 0x65, 0x67, 0x65, 0x32, 0x42, 0x0a, 0x07, 0x63, 0x6f,
	0x6d, 0x6d, 0x61, 0x6e, 0x64, 0x12, 0x0d, 0x2e, 0x6d, 0x65, 0x74, 0x61, 0x2e, 0x43, 0x6f, 0x6d,
	0x6d, 0x61, 0x6e, 0x64, 0x18, 0x74, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x19, 0x2e, 0x6d, 0x65, 0x74,
	0x61, 0x2e, 0x53, 0x65, 0x74, 0x50, 0x72, 0x69, 0x76, 0x69, 0x6c, 0x65, 0x67, 0x65, 0x43, 0x6f,
	0x6d, 0x6d, 0x61, 0x6e, 0x64, 0x52, 0x07, 0x63, 0x6f, 0x6d, 0x6d, 0x61, 0x6e, 0x64, 0x22, 0x6f,
	0x0a, 0x0e, 0x53, 0x65, 0x74, 0x44, 0x61, 0x74, 0x61, 0x43, 0x6f, 0x6d, 0x6d, 0x61, 0x6e, 0x64,
	0x12, 0x1e, 0x0a, 0x04, 0x44, 0x61, 0x74, 0x61, 0x18, 0x01, 0x20, 0x02, 0x28, 0x0b, 0x32, 0x0a,
	0x2e, 0x6d, 0x65, 0x74, 0x61, 0x2e, 0x44, 0x61, 0x74, 0x61, 0x52, 0x04, 0x44, 0x61, 0x74, 0x61,
	0x32, 0x3d, 0x0a, 0x07, 0x63, 0x6f, 0x6d, 0x6d, 0x61, 0x6e, 0x64, 0x12, 0x0d, 0x2e, 0x6d, 0x65,
	0x74, 0x61, 0x2e, 0x43, 0x6f, 0x6d, 0x6d, 0x61, 0x6e, 0x64, 0x18, 0x75, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x14, 0x2e, 0x6d, 0x65, 0x74, 0x61, 0x2e, 0x53, 0x65, 0x74, 0x44, 0x61, 0x74, 0x61, 0x43,
	0x6f, 0x6d, 0x6d, 0x61, 0x6e, 0x64, 0x52, 0x07, 0x63, 0x6f, 0x6d, 0x6d, 0x61, 0x6e, 0x64, 0x22,
	0x95, 0x01, 0x0a, 0x18, 0x53, 0x65, 0x74, 0x41, 0x64, 0x6d, 0x69, 0x6e, 0x50, 0x72, 0x69, 0x76,
	0x69, 0x6c, 0x65, 0x67, 0x65, 0x43, 0x6f, 0x6d, 0x6d, 0x61, 0x6e, 0x64, 0x12, 0x1a, 0x0a, 0x08,
	0x55, 0x73, 0x65, 0x72, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x02, 0x28, 0x09, 0x52, 0x08,
	0x55, 0x73, 0x65, 0x72, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x41, 0x64, 0x6d, 0x69,
	0x6e, 0x18, 0x02, 0x20, 0x02, 0x28, 0x08, 0x52, 0x05, 0x41, 0x64, 0x6d, 0x69, 0x6e, 0x32, 0x47,
	0x0a, 0x07, 0x63, 0x6f, 0x6d, 0x6d, 0x61, 0x6e, 0x64, 0x12, 0x0d, 0x2e, 0x6d, 0x65, 0x74, 0x61,
	0x2e, 0x43, 0x6f, 0x6d, 0x6d, 0x61, 0x6e, 0x64, 0x18, 0x76, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1e,
	0x2e, 0x6d, 0x65, 0x74, 0x61, 0x2e, 0x53, 0x65, 0x74, 0x41, 0x64, 0x6d, 0x69, 0x6e, 0x50, 0x72,
	0x69, 0x76, 0x69, 0x6c, 0x65, 0x67, 0x65, 0x43, 0x6f, 0x6d, 0x6d, 0x61, 0x6e, 0x64, 0x52, 0x07,
	0x63, 0x6f, 0x6d, 0x6d, 0x61, 0x6e, 0x64, 0x22, 0x79, 0x0a, 0x11, 0x55, 0x70, 0x64, 0x61, 0x74,
	0x65, 0x4e, 0x6f, 0x64, 0x65, 0x43, 0x6f, 0x6d, 0x6d, 0x61, 0x6e, 0x64, 0x12, 0x0e, 0x0a, 0x02,
	0x49, 0x44, 0x18, 0x01, 0x20, 0x02, 0x28, 0x04, 0x52, 0x02, 0x49, 0x44, 0x12, 0x12, 0x0a, 0x04,
	0x48, 0x6f, 0x73, 0x74, 0x18, 0x02, 0x20, 0x02, 0x28, 0x09, 0x52, 0x04, 0x48, 0x6f, 0x73, 0x74,
	0x32, 0x40, 0x0a, 0x07, 0x63, 0x6f, 0x6d, 0x6d, 0x61, 0x6e, 0x64, 0x12, 0x0d, 0x2e, 0x6d, 0x65,
	0x74, 0x61, 0x2e, 0x43, 0x6f, 0x6d, 0x6d, 0x61, 0x6e, 0x64, 0x18, 0x77, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x17, 0x2e, 0x6d, 0x65, 0x74, 0x61, 0x2e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x4e, 0x6f,
	0x64, 0x65, 0x43, 0x6f, 0x6d, 0x6d, 0x61, 0x6e, 0x64, 0x52, 0x07, 0x63, 0x6f, 0x6d, 0x6d, 0x61,
	0x6e, 0x64, 0x22, 0xf7, 0x01, 0x0a, 0x19, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x53, 0x75, 0x62,
	0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x43, 0x6f, 0x6d, 0x6d, 0x61, 0x6e, 0x64,
	0x12, 0x12, 0x0a, 0x04, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x02, 0x28, 0x09, 0x52, 0x04,
	0x4e, 0x61, 0x6d, 0x65, 0x12, 0x1a, 0x0a, 0x08, 0x44, 0x61, 0x74, 0x61, 0x62, 0x61, 0x73, 0x65,
	0x18, 0x02, 0x20, 0x02, 0x28, 0x09, 0x52, 0x08, 0x44, 0x61, 0x74, 0x61, 0x62, 0x61, 0x73, 0x65,
	0x12, 0x28, 0x0a, 0x0f, 0x52, 0x65, 0x74, 0x65, 0x6e, 0x74, 0x69, 0x6f, 0x6e, 0x50, 0x6f, 0x6c,
	0x69, 0x63, 0x79, 0x18, 0x03, 0x20, 0x02, 0x28, 0x09, 0x52, 0x0f, 0x52, 0x65, 0x74, 0x65, 0x6e,
	0x74, 0x69, 0x6f, 0x6e, 0x50, 0x6f, 0x6c, 0x69, 0x63, 0x79, 0x12, 0x12, 0x0a, 0x04, 0x4d, 0x6f,
	0x64, 0x65, 0x18, 0x04, 0x20, 0x02, 0x28, 0x09, 0x52, 0x04, 0x4d, 0x6f, 0x64, 0x65, 0x12, 0x22,
	0x0a, 0x0c, 0x44, 0x65, 0x73, 0x74, 0x69, 0x6e, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x18, 0x05,
	0x20, 0x03, 0x28, 0x09, 0x52, 0x0c, 0x44, 0x65, 0x73, 0x74, 0x69, 0x6e, 0x61, 0x74, 0x69, 0x6f,
	0x6e, 0x73, 0x32, 0x48, 0x0a, 0x07, 0x63, 0x6f, 0x6d, 0x6d, 0x61, 0x6e, 0x64, 0x12, 0x0d, 0x2e,
	0x6d, 0x65, 0x74, 0x61, 0x2e, 0x43, 0x6f, 0x6d, 0x6d, 0x61, 0x6e, 0x64, 0x18, 0x79, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x1f, 0x2e, 0x6d, 0x65, 0x74, 0x61, 0x2e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65,
	0x53, 0x75, 0x62, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x43, 0x6f, 0x6d, 0x6d,
	0x61, 0x6e, 0x64, 0x52, 0x07, 0x63, 0x6f, 0x6d, 0x6d, 0x61, 0x6e, 0x64, 0x22, 0xbb, 0x01, 0x0a,
	0x17, 0x44, 0x72, 0x6f, 0x70, 0x53, 0x75, 0x62, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f,
	0x6e, 0x43, 0x6f, 0x6d, 0x6d, 0x61, 0x6e, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x4e, 0x61, 0x6d, 0x65,
	0x18, 0x01, 0x20, 0x02, 0x28, 0x09, 0x52, 0x04, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x1a, 0x0a, 0x08,
	0x44, 0x61, 0x74, 0x61, 0x62, 0x61, 0x73, 0x65, 0x18, 0x02, 0x20, 0x02, 0x28, 0x09, 0x52, 0x08,
	0x44, 0x61, 0x74, 0x61, 0x62, 0x61, 0x73, 0x65, 0x12, 0x28, 0x0a, 0x0f, 0x52, 0x65, 0x74, 0x65,
	0x6e, 0x74, 0x69, 0x6f, 0x6e, 0x50, 0x6f, 0x6c, 0x69, 0x63, 0x79, 0x18, 0x03, 0x20, 0x02, 0x28,
	0x09, 0x52, 0x0f, 0x52, 0x65, 0x74, 0x65, 0x6e, 0x74, 0x69, 0x6f, 0x6e, 0x50, 0x6f, 0x6c, 0x69,
	0x63, 0x79, 0x32, 0x46, 0x0a, 0x07, 0x63, 0x6f, 0x6d, 0x6d, 0x61, 0x6e, 0x64, 0x12, 0x0d, 0x2e,
	0x6d, 0x65, 0x74, 0x61, 0x2e, 0x43, 0x6f, 0x6d, 0x6d, 0x61, 0x6e, 0x64, 0x18, 0x7a, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x1d, 0x2e, 0x6d, 0x65, 0x74, 0x61, 0x2e, 0x44, 0x72, 0x6f, 0x70, 0x53, 0x75,
	0x62, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x43, 0x6f, 0x6d, 0x6d, 0x61, 0x6e,
	0x64, 0x52, 0x07, 0x63, 0x6f, 0x6d, 0x6d, 0x61, 0x6e, 0x64, 0x22, 0x79, 0x0a, 0x11, 0x52, 0x65,
	0x6d, 0x6f, 0x76, 0x65, 0x50, 0x65, 0x65, 0x72, 0x43, 0x6f, 0x6d, 0x6d, 0x61, 0x6e, 0x64, 0x12,
	0x0e, 0x0a, 0x02, 0x49, 0x44, 0x18, 0x01, 0x20, 0x01, 0x28, 0x04, 0x52, 0x02, 0x49, 0x44, 0x12,
	0x12, 0x0a, 0x04, 0x41, 0x64, 0x64, 0x72, 0x18, 0x02, 0x20, 0x02, 0x28, 0x09, 0x52, 0x04, 0x41,
	0x64, 0x64, 0x72, 0x32, 0x40, 0x0a, 0x07, 0x63, 0x6f, 0x6d, 0x6d, 0x61, 0x6e, 0x64, 0x12, 0x0d,
	0x2e, 0x6d, 0x65, 0x74, 0x61, 0x2e, 0x43, 0x6f, 0x6d, 0x6d, 0x61, 0x6e, 0x64, 0x18, 0x7b, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x17, 0x2e, 0x6d, 0x65, 0x74, 0x61, 0x2e, 0x52, 0x65, 0x6d, 0x6f, 0x76,
	0x65, 0x50, 0x65, 0x65, 0x72, 0x43, 0x6f, 0x6d, 0x6d, 0x61, 0x6e, 0x64, 0x52, 0x07, 0x63, 0x6f,
	0x6d, 0x6d, 0x61, 0x6e, 0x64, 0x22, 0xa7, 0x01, 0x0a, 0x15, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65,
	0x4d, 0x65, 0x74, 0x61, 0x4e, 0x6f, 0x64, 0x65, 0x43, 0x6f, 0x6d, 0x6d, 0x61, 0x6e, 0x64, 0x12,
	0x1a, 0x0a, 0x08, 0x48, 0x54, 0x54, 0x50, 0x41, 0x64, 0x64, 0x72, 0x18, 0x01, 0x20, 0x02, 0x28,
	0x09, 0x52, 0x08, 0x48, 0x54, 0x54, 0x50, 0x41, 0x64, 0x64, 0x72, 0x12, 0x18, 0x0a, 0x07, 0x54,
	0x43, 0x50, 0x41, 0x64, 0x64, 0x72, 0x18, 0x02, 0x20, 0x02, 0x28, 0x09, 0x52, 0x07, 0x54, 0x43,
	0x50, 0x41, 0x64, 0x64, 0x72, 0x12, 0x12, 0x0a, 0x04, 0x52, 0x61, 0x6e, 0x64, 0x18, 0x03, 0x20,
	0x02, 0x28, 0x04, 0x52, 0x04, 0x52, 0x61, 0x6e, 0x64, 0x32, 0x44, 0x0a, 0x07, 0x63, 0x6f, 0x6d,
	0x6d, 0x61, 0x6e, 0x64, 0x12, 0x0d, 0x2e, 0x6d, 0x65, 0x74, 0x61, 0x2e, 0x43, 0x6f, 0x6d, 0x6d,
	0x61, 0x6e, 0x64, 0x18, 0x7c, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1b, 0x2e, 0x6d, 0x65, 0x74, 0x61,
	0x2e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x4d, 0x65, 0x74, 0x61, 0x4e, 0x6f, 0x64, 0x65, 0x43,
	0x6f, 0x6d, 0x6d, 0x61, 0x6e, 0x64, 0x52, 0x07, 0x63, 0x6f, 0x6d, 0x6d, 0x61, 0x6e, 0x64, 0x22,
	0x93, 0x01, 0x0a, 0x15, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x44, 0x61, 0x74, 0x61, 0x4e, 0x6f,
	0x64, 0x65, 0x43, 0x6f, 0x6d, 0x6d, 0x61, 0x6e, 0x64, 0x12, 0x1a, 0x0a, 0x08, 0x48, 0x54, 0x54,
	0x50, 0x41, 0x64, 0x64, 0x72, 0x18, 0x01, 0x20, 0x02, 0x28, 0x09, 0x52, 0x08, 0x48, 0x54, 0x54,
	0x50, 0x41, 0x64, 0x64, 0x72, 0x12, 0x18, 0x0a, 0x07, 0x54, 0x43, 0x50, 0x41, 0x64, 0x64, 0x72,
	0x18, 0x02, 0x20, 0x02, 0x28, 0x09, 0x52, 0x07, 0x54, 0x43, 0x50, 0x41, 0x64, 0x64, 0x72, 0x32,
	0x44, 0x0a, 0x07, 0x63, 0x6f, 0x6d, 0x6d, 0x61, 0x6e, 0x64, 0x12, 0x0d, 0x2e, 0x6d, 0x65, 0x74,
	0x61, 0x2e, 0x43, 0x6f, 0x6d, 0x6d, 0x61, 0x6e, 0x64, 0x18, 0x7d, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x1b, 0x2e, 0x6d, 0x65, 0x74, 0x61, 0x2e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x44, 0x61, 0x74,
	0x61, 0x4e, 0x6f, 0x64, 0x65, 0x43, 0x6f, 0x6d, 0x6d, 0x61, 0x6e, 0x64, 0x52, 0x07, 0x63, 0x6f,
	0x6d, 0x6d, 0x61, 0x6e, 0x64, 0x22, 0x9b, 0x01, 0x0a, 0x15, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65,
	0x44, 0x61, 0x74, 0x61, 0x4e, 0x6f, 0x64, 0x65, 0x43, 0x6f, 0x6d, 0x6d, 0x61, 0x6e, 0x64, 0x12,
	0x0e, 0x0a, 0x02, 0x49, 0x44, 0x18, 0x01, 0x20, 0x02, 0x28, 0x04, 0x52, 0x02, 0x49, 0x44, 0x12,
	0x12, 0x0a, 0x04, 0x48, 0x6f, 0x73, 0x74, 0x18, 0x02, 0x20, 0x02, 0x28, 0x09, 0x52, 0x04, 0x48,
	0x6f, 0x73, 0x74, 0x12, 0x18, 0x0a, 0x07, 0x54, 0x43, 0x50, 0x48, 0x6f, 0x73, 0x74, 0x18, 0x03,
	0x20, 0x02, 0x28, 0x09, 0x52, 0x07, 0x54, 0x43, 0x50, 0x48, 0x6f, 0x73, 0x74, 0x32, 0x44, 0x0a,
	0x07, 0x63, 0x6f, 0x6d, 0x6d, 0x61, 0x6e, 0x64, 0x12, 0x0d, 0x2e, 0x6d, 0x65, 0x74, 0x61, 0x2e,
	0x43, 0x6f, 0x6d, 0x6d, 0x61, 0x6e, 0x64, 0x18, 0x7e, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1b, 0x2e,
	0x6d, 0x65, 0x74, 0x61, 0x2e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x44, 0x61, 0x74, 0x61, 0x4e,
	0x6f, 0x64, 0x65, 0x43, 0x6f, 0x6d, 0x6d, 0x61, 0x6e, 0x64, 0x52, 0x07, 0x63, 0x6f, 0x6d, 0x6d,
	0x61, 0x6e, 0x64, 0x22, 0x6d, 0x0a, 0x15, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x4d, 0x65, 0x74,
	0x61, 0x4e, 0x6f, 0x64, 0x65, 0x43, 0x6f, 0x6d, 0x6d, 0x61, 0x6e, 0x64, 0x12, 0x0e, 0x0a, 0x02,
	0x49, 0x44, 0x18, 0x01, 0x20, 0x02, 0x28, 0x04, 0x52, 0x02, 0x49, 0x44, 0x32, 0x44, 0x0a, 0x07,
	0x63, 0x6f, 0x6d, 0x6d, 0x61, 0x6e, 0x64, 0x12, 0x0d, 0x2e, 0x6d, 0x65, 0x74, 0x61, 0x2e, 0x43,
	0x6f, 0x6d, 0x6d, 0x61, 0x6e, 0x64, 0x18, 0x7f, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1b, 0x2e, 0x6d,
	0x65, 0x74, 0x61, 0x2e, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x4d, 0x65, 0x74, 0x61, 0x4e, 0x6f,
	0x64, 0x65, 0x43, 0x6f, 0x6d, 0x6d, 0x61, 0x6e, 0x64, 0x52, 0x07, 0x63, 0x6f, 0x6d, 0x6d, 0x61,
	0x6e, 0x64, 0x22, 0x6e, 0x0a, 0x15, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x44, 0x61, 0x74, 0x61,
	0x4e, 0x6f, 0x64, 0x65, 0x43, 0x6f, 0x6d, 0x6d, 0x61, 0x6e, 0x64, 0x12, 0x0e, 0x0a, 0x02, 0x49,
	0x44, 0x18, 0x01, 0x20, 0x02, 0x28, 0x04, 0x52, 0x02, 0x49, 0x44, 0x32, 0x45, 0x0a, 0x07, 0x63,
	0x6f, 0x6d, 0x6d, 0x61, 0x6e, 0x64, 0x12, 0x0d, 0x2e, 0x6d, 0x65, 0x74, 0x61, 0x2e, 0x43, 0x6f,
	0x6d, 0x6d, 0x61, 0x6e, 0x64, 0x18, 0x80, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1b, 0x2e, 0x6d,
	0x65, 0x74, 0x61, 0x2e, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x44, 0x61, 0x74, 0x61, 0x4e, 0x6f,
	0x64, 0x65, 0x43, 0x6f, 0x6d, 0x6d, 0x61, 0x6e, 0x64, 0x52, 0x07, 0x63, 0x6f, 0x6d, 0x6d, 0x61,
	0x6e, 0x64, 0x22, 0x46, 0x0a, 0x08, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x0e,
	0x0a, 0x02, 0x4f, 0x4b, 0x18, 0x01, 0x20, 0x02, 0x28, 0x08, 0x52, 0x02, 0x4f, 0x4b, 0x12, 0x14,
	0x0a, 0x05, 0x45, 0x72, 0x72, 0x6f, 0x72, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x45,
	0x72, 0x72, 0x6f, 0x72, 0x12, 0x14, 0x0a, 0x05, 0x49, 0x6e, 0x64, 0x65, 0x78, 0x18, 0x03, 0x20,
	0x01, 0x28, 0x04, 0x52, 0x05, 0x49, 0x6e, 0x64, 0x65, 0x78, 0x22, 0xa2, 0x01, 0x0a, 0x12, 0x53,
	0x65, 0x74, 0x4d, 0x65, 0x74, 0x61, 0x4e, 0x6f, 0x64, 0x65, 0x43, 0x6f, 0x6d, 0x6d, 0x61, 0x6e,
	0x64, 0x12, 0x1a, 0x0a, 0x08, 0x48, 0x54, 0x54, 0x50, 0x41, 0x64, 0x64, 0x72, 0x18, 0x01, 0x20,
	0x02, 0x28, 0x09, 0x52, 0x08, 0x48, 0x54, 0x54, 0x50, 0x41, 0x64, 0x64, 0x72, 0x12, 0x18, 0x0a,
	0x07, 0x54, 0x43, 0x50, 0x41, 0x64, 0x64, 0x72, 0x18, 0x02, 0x20, 0x02, 0x28, 0x09, 0x52, 0x07,
	0x54, 0x43, 0x50, 0x41, 0x64, 0x64, 0x72, 0x12, 0x12, 0x0a, 0x04, 0x52, 0x61, 0x6e, 0x64, 0x18,
	0x03, 0x20, 0x02, 0x28, 0x04, 0x52, 0x04, 0x52, 0x61, 0x6e, 0x64, 0x32, 0x42, 0x0a, 0x07, 0x63,
	0x6f, 0x6d, 0x6d, 0x61, 0x6e, 0x64, 0x12, 0x0d, 0x2e, 0x6d, 0x65, 0x74, 0x61, 0x2e, 0x43, 0x6f,
	0x6d, 0x6d, 0x61, 0x6e, 0x64, 0x18, 0x81, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x18, 0x2e, 0x6d,
	0x65, 0x74, 0x61, 0x2e, 0x53, 0x65, 0x74, 0x4d, 0x65, 0x74, 0x61, 0x4e, 0x6f, 0x64, 0x65, 0x43,
	0x6f, 0x6d, 0x6d, 0x61, 0x6e, 0x64, 0x52, 0x07, 0x63, 0x6f, 0x6d, 0x6d, 0x61, 0x6e, 0x64, 0x22,
	0x64, 0x0a, 0x10, 0x44, 0x72, 0x6f, 0x70, 0x53, 0x68, 0x61, 0x72, 0x64, 0x43, 0x6f, 0x6d, 0x6d,
	0x61, 0x6e, 0x64, 0x12, 0x0e, 0x0a, 0x02, 0x49, 0x44, 0x18, 0x01, 0x20, 0x02, 0x28, 0x04, 0x52,
	0x02, 0x49, 0x44, 0x32, 0x40, 0x0a, 0x07, 0x63, 0x6f, 0x6d, 0x6d, 0x61, 0x6e, 0x64, 0x12, 0x0d,
	0x2e, 0x6d, 0x65, 0x74, 0x61, 0x2e, 0x43, 0x6f, 0x6d, 0x6d, 0x61, 0x6e, 0x64, 0x18, 0x82, 0x01,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x16, 0x2e, 0x6d, 0x65, 0x74, 0x61, 0x2e, 0x44, 0x72, 0x6f, 0x70,
	0x53, 0x68, 0x61, 0x72, 0x64, 0x43, 0x6f, 0x6d, 0x6d, 0x61, 0x6e, 0x64, 0x52, 0x07, 0x63, 0x6f,
	0x6d, 0x6d, 0x61, 0x6e, 0x64, 0x42, 0x08, 0x5a, 0x06, 0x2e, 0x3b, 0x6d, 0x65, 0x74, 0x61,
}

var (
	file_internal_meta_proto_rawDescOnce sync.Once
	file_internal_meta_proto_rawDescData = file_internal_meta_proto_rawDesc
)

func file_internal_meta_proto_rawDescGZIP() []byte {
	file_internal_meta_proto_rawDescOnce.Do(func() {
		file_internal_meta_proto_rawDescData = protoimpl.X.CompressGZIP(file_internal_meta_proto_rawDescData)
	})
	return file_internal_meta_proto_rawDescData
}

var file_internal_meta_proto_enumTypes = make([]protoimpl.EnumInfo, 1)
var file_internal_meta_proto_msgTypes = make([]protoimpl.MessageInfo, 43)
var file_internal_meta_proto_goTypes = []interface{}{
	(Command_Type)(0),                        // 0: meta.Command.Type
	(*Data)(nil),                             // 1: meta.Data
	(*NodeInfo)(nil),                         // 2: meta.NodeInfo
	(*DatabaseInfo)(nil),                     // 3: meta.DatabaseInfo
	(*RetentionPolicySpec)(nil),              // 4: meta.RetentionPolicySpec
	(*RetentionPolicyInfo)(nil),              // 5: meta.RetentionPolicyInfo
	(*ShardGroupInfo)(nil),                   // 6: meta.ShardGroupInfo
	(*ShardInfo)(nil),                        // 7: meta.ShardInfo
	(*SubscriptionInfo)(nil),                 // 8: meta.SubscriptionInfo
	(*ShardOwner)(nil),                       // 9: meta.ShardOwner
	(*ContinuousQueryInfo)(nil),              // 10: meta.ContinuousQueryInfo
	(*UserInfo)(nil),                         // 11: meta.UserInfo
	(*UserPrivilege)(nil),                    // 12: meta.UserPrivilege
	(*Command)(nil),                          // 13: meta.Command
	(*CreateNodeCommand)(nil),                // 14: meta.CreateNodeCommand
	(*DeleteNodeCommand)(nil),                // 15: meta.DeleteNodeCommand
	(*CreateDatabaseCommand)(nil),            // 16: meta.CreateDatabaseCommand
	(*DropDatabaseCommand)(nil),              // 17: meta.DropDatabaseCommand
	(*CreateRetentionPolicyCommand)(nil),     // 18: meta.CreateRetentionPolicyCommand
	(*DropRetentionPolicyCommand)(nil),       // 19: meta.DropRetentionPolicyCommand
	(*SetDefaultRetentionPolicyCommand)(nil), // 20: meta.SetDefaultRetentionPolicyCommand
	(*UpdateRetentionPolicyCommand)(nil),     // 21: meta.UpdateRetentionPolicyCommand
	(*CreateShardGroupCommand)(nil),          // 22: meta.CreateShardGroupCommand
	(*DeleteShardGroupCommand)(nil),          // 23: meta.DeleteShardGroupCommand
	(*CreateContinuousQueryCommand)(nil),     // 24: meta.CreateContinuousQueryCommand
	(*DropContinuousQueryCommand)(nil),       // 25: meta.DropContinuousQueryCommand
	(*CreateUserCommand)(nil),                // 26: meta.CreateUserCommand
	(*DropUserCommand)(nil),                  // 27: meta.DropUserCommand
	(*UpdateUserCommand)(nil),                // 28: meta.UpdateUserCommand
	(*SetPrivilegeCommand)(nil),              // 29: meta.SetPrivilegeCommand
	(*SetDataCommand)(nil),                   // 30: meta.SetDataCommand
	(*SetAdminPrivilegeCommand)(nil),         // 31: meta.SetAdminPrivilegeCommand
	(*UpdateNodeCommand)(nil),                // 32: meta.UpdateNodeCommand
	(*CreateSubscriptionCommand)(nil),        // 33: meta.CreateSubscriptionCommand
	(*DropSubscriptionCommand)(nil),          // 34: meta.DropSubscriptionCommand
	(*RemovePeerCommand)(nil),                // 35: meta.RemovePeerCommand
	(*CreateMetaNodeCommand)(nil),            // 36: meta.CreateMetaNodeCommand
	(*CreateDataNodeCommand)(nil),            // 37: meta.CreateDataNodeCommand
	(*UpdateDataNodeCommand)(nil),            // 38: meta.UpdateDataNodeCommand
	(*DeleteMetaNodeCommand)(nil),            // 39: meta.DeleteMetaNodeCommand
	(*DeleteDataNodeCommand)(nil),            // 40: meta.DeleteDataNodeCommand
	(*Response)(nil),                         // 41: meta.Response
	(*SetMetaNodeCommand)(nil),               // 42: meta.SetMetaNodeCommand
	(*DropShardCommand)(nil),                 // 43: meta.DropShardCommand
}
var file_internal_meta_proto_depIdxs = []int32{
	2,  // 0: meta.Data.Nodes:type_name -> meta.NodeInfo
	3,  // 1: meta.Data.Databases:type_name -> meta.DatabaseInfo
	11, // 2: meta.Data.Users:type_name -> meta.UserInfo
	2,  // 3: meta.Data.DataNodes:type_name -> meta.NodeInfo
	2,  // 4: meta.Data.MetaNodes:type_name -> meta.NodeInfo
	5,  // 5: meta.DatabaseInfo.RetentionPolicies:type_name -> meta.RetentionPolicyInfo
	10, // 6: meta.DatabaseInfo.ContinuousQueries:type_name -> meta.ContinuousQueryInfo
	6,  // 7: meta.RetentionPolicyInfo.ShardGroups:type_name -> meta.ShardGroupInfo
	8,  // 8: meta.RetentionPolicyInfo.Subscriptions:type_name -> meta.SubscriptionInfo
	7,  // 9: meta.ShardGroupInfo.Shards:type_name -> meta.ShardInfo
	9,  // 10: meta.ShardInfo.Owners:type_name -> meta.ShardOwner
	12, // 11: meta.UserInfo.Privileges:type_name -> meta.UserPrivilege
	0,  // 12: meta.Command.type:type_name -> meta.Command.Type
	5,  // 13: meta.CreateDatabaseCommand.RetentionPolicy:type_name -> meta.RetentionPolicyInfo
	5,  // 14: meta.CreateRetentionPolicyCommand.RetentionPolicy:type_name -> meta.RetentionPolicyInfo
	1,  // 15: meta.SetDataCommand.Data:type_name -> meta.Data
	13, // 16: meta.CreateNodeCommand.command:extendee -> meta.Command
	13, // 17: meta.DeleteNodeCommand.command:extendee -> meta.Command
	13, // 18: meta.CreateDatabaseCommand.command:extendee -> meta.Command
	13, // 19: meta.DropDatabaseCommand.command:extendee -> meta.Command
	13, // 20: meta.CreateRetentionPolicyCommand.command:extendee -> meta.Command
	13, // 21: meta.DropRetentionPolicyCommand.command:extendee -> meta.Command
	13, // 22: meta.SetDefaultRetentionPolicyCommand.command:extendee -> meta.Command
	13, // 23: meta.UpdateRetentionPolicyCommand.command:extendee -> meta.Command
	13, // 24: meta.CreateShardGroupCommand.command:extendee -> meta.Command
	13, // 25: meta.DeleteShardGroupCommand.command:extendee -> meta.Command
	13, // 26: meta.CreateContinuousQueryCommand.command:extendee -> meta.Command
	13, // 27: meta.DropContinuousQueryCommand.command:extendee -> meta.Command
	13, // 28: meta.CreateUserCommand.command:extendee -> meta.Command
	13, // 29: meta.DropUserCommand.command:extendee -> meta.Command
	13, // 30: meta.UpdateUserCommand.command:extendee -> meta.Command
	13, // 31: meta.SetPrivilegeCommand.command:extendee -> meta.Command
	13, // 32: meta.SetDataCommand.command:extendee -> meta.Command
	13, // 33: meta.SetAdminPrivilegeCommand.command:extendee -> meta.Command
	13, // 34: meta.UpdateNodeCommand.command:extendee -> meta.Command
	13, // 35: meta.CreateSubscriptionCommand.command:extendee -> meta.Command
	13, // 36: meta.DropSubscriptionCommand.command:extendee -> meta.Command
	13, // 37: meta.RemovePeerCommand.command:extendee -> meta.Command
	13, // 38: meta.CreateMetaNodeCommand.command:extendee -> meta.Command
	13, // 39: meta.CreateDataNodeCommand.command:extendee -> meta.Command
	13, // 40: meta.UpdateDataNodeCommand.command:extendee -> meta.Command
	13, // 41: meta.DeleteMetaNodeCommand.command:extendee -> meta.Command
	13, // 42: meta.DeleteDataNodeCommand.command:extendee -> meta.Command
	13, // 43: meta.SetMetaNodeCommand.command:extendee -> meta.Command
	13, // 44: meta.DropShardCommand.command:extendee -> meta.Command
	14, // 45: meta.CreateNodeCommand.command:type_name -> meta.CreateNodeCommand
	15, // 46: meta.DeleteNodeCommand.command:type_name -> meta.DeleteNodeCommand
	16, // 47: meta.CreateDatabaseCommand.command:type_name -> meta.CreateDatabaseCommand
	17, // 48: meta.DropDatabaseCommand.command:type_name -> meta.DropDatabaseCommand
	18, // 49: meta.CreateRetentionPolicyCommand.command:type_name -> meta.CreateRetentionPolicyCommand
	19, // 50: meta.DropRetentionPolicyCommand.command:type_name -> meta.DropRetentionPolicyCommand
	20, // 51: meta.SetDefaultRetentionPolicyCommand.command:type_name -> meta.SetDefaultRetentionPolicyCommand
	21, // 52: meta.UpdateRetentionPolicyCommand.command:type_name -> meta.UpdateRetentionPolicyCommand
	22, // 53: meta.CreateShardGroupCommand.command:type_name -> meta.CreateShardGroupCommand
	23, // 54: meta.DeleteShardGroupCommand.command:type_name -> meta.DeleteShardGroupCommand
	24, // 55: meta.CreateContinuousQueryCommand.command:type_name -> meta.CreateContinuousQueryCommand
	25, // 56: meta.DropContinuousQueryCommand.command:type_name -> meta.DropContinuousQueryCommand
	26, // 57: meta.CreateUserCommand.command:type_name -> meta.CreateUserCommand
	27, // 58: meta.DropUserCommand.command:type_name -> meta.DropUserCommand
	28, // 59: meta.UpdateUserCommand.command:type_name -> meta.UpdateUserCommand
	29, // 60: meta.SetPrivilegeCommand.command:type_name -> meta.SetPrivilegeCommand
	30, // 61: meta.SetDataCommand.command:type_name -> meta.SetDataCommand
	31, // 62: meta.SetAdminPrivilegeCommand.command:type_name -> meta.SetAdminPrivilegeCommand
	32, // 63: meta.UpdateNodeCommand.command:type_name -> meta.UpdateNodeCommand
	33, // 64: meta.CreateSubscriptionCommand.command:type_name -> meta.CreateSubscriptionCommand
	34, // 65: meta.DropSubscriptionCommand.command:type_name -> meta.DropSubscriptionCommand
	35, // 66: meta.RemovePeerCommand.command:type_name -> meta.RemovePeerCommand
	36, // 67: meta.CreateMetaNodeCommand.command:type_name -> meta.CreateMetaNodeCommand
	37, // 68: meta.CreateDataNodeCommand.command:type_name -> meta.CreateDataNodeCommand
	38, // 69: meta.UpdateDataNodeCommand.command:type_name -> meta.UpdateDataNodeCommand
	39, // 70: meta.DeleteMetaNodeCommand.command:type_name -> meta.DeleteMetaNodeCommand
	40, // 71: meta.DeleteDataNodeCommand.command:type_name -> meta.DeleteDataNodeCommand
	42, // 72: meta.SetMetaNodeCommand.command:type_name -> meta.SetMetaNodeCommand
	43, // 73: meta.DropShardCommand.command:type_name -> meta.DropShardCommand
	74, // [74:74] is the sub-list for method output_type
	74, // [74:74] is the sub-list for method input_type
	45, // [45:74] is the sub-list for extension type_name
	16, // [16:45] is the sub-list for extension extendee
	0,  // [0:16] is the sub-list for field type_name
}

func init() { file_internal_meta_proto_init() }
func file_internal_meta_proto_init() {
	if File_internal_meta_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_internal_meta_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Data); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_internal_meta_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*NodeInfo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_internal_meta_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DatabaseInfo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_internal_meta_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RetentionPolicySpec); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_internal_meta_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RetentionPolicyInfo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_internal_meta_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ShardGroupInfo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_internal_meta_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ShardInfo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_internal_meta_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SubscriptionInfo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_internal_meta_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ShardOwner); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_internal_meta_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ContinuousQueryInfo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_internal_meta_proto_msgTypes[10].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UserInfo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_internal_meta_proto_msgTypes[11].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UserPrivilege); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_internal_meta_proto_msgTypes[12].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Command); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			case 3:
				return &v.extensionFields
			default:
				return nil
			}
		}
		file_internal_meta_proto_msgTypes[13].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateNodeCommand); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_internal_meta_proto_msgTypes[14].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DeleteNodeCommand); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_internal_meta_proto_msgTypes[15].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateDatabaseCommand); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_internal_meta_proto_msgTypes[16].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DropDatabaseCommand); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_internal_meta_proto_msgTypes[17].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateRetentionPolicyCommand); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_internal_meta_proto_msgTypes[18].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DropRetentionPolicyCommand); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_internal_meta_proto_msgTypes[19].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SetDefaultRetentionPolicyCommand); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_internal_meta_proto_msgTypes[20].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdateRetentionPolicyCommand); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_internal_meta_proto_msgTypes[21].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateShardGroupCommand); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_internal_meta_proto_msgTypes[22].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DeleteShardGroupCommand); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_internal_meta_proto_msgTypes[23].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateContinuousQueryCommand); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_internal_meta_proto_msgTypes[24].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DropContinuousQueryCommand); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_internal_meta_proto_msgTypes[25].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateUserCommand); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_internal_meta_proto_msgTypes[26].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DropUserCommand); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_internal_meta_proto_msgTypes[27].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdateUserCommand); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_internal_meta_proto_msgTypes[28].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SetPrivilegeCommand); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_internal_meta_proto_msgTypes[29].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SetDataCommand); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_internal_meta_proto_msgTypes[30].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SetAdminPrivilegeCommand); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_internal_meta_proto_msgTypes[31].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdateNodeCommand); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_internal_meta_proto_msgTypes[32].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateSubscriptionCommand); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_internal_meta_proto_msgTypes[33].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DropSubscriptionCommand); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_internal_meta_proto_msgTypes[34].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RemovePeerCommand); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_internal_meta_proto_msgTypes[35].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateMetaNodeCommand); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_internal_meta_proto_msgTypes[36].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateDataNodeCommand); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_internal_meta_proto_msgTypes[37].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdateDataNodeCommand); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_internal_meta_proto_msgTypes[38].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DeleteMetaNodeCommand); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_internal_meta_proto_msgTypes[39].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DeleteDataNodeCommand); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_internal_meta_proto_msgTypes[40].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Response); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_internal_meta_proto_msgTypes[41].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SetMetaNodeCommand); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_internal_meta_proto_msgTypes[42].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DropShardCommand); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_internal_meta_proto_rawDesc,
			NumEnums:      1,
			NumMessages:   43,
			NumExtensions: 29,
			NumServices:   0,
		},
		GoTypes:           file_internal_meta_proto_goTypes,
		DependencyIndexes: file_internal_meta_proto_depIdxs,
		EnumInfos:         file_internal_meta_proto_enumTypes,
		MessageInfos:      file_internal_meta_proto_msgTypes,
		ExtensionInfos:    file_internal_meta_proto_extTypes,
	}.Build()
	File_internal_meta_proto = out.File
	file_internal_meta_proto_rawDesc = nil
	file_internal_meta_proto_goTypes = nil
	file_internal_meta_proto_depIdxs = nil
}
